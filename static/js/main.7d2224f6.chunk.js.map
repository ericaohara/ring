{"version":3,"sources":["config/firebase.js","AuthService.js","Spinner.js","pages/SignIn.js","pages/SignUp.js","todo_components/Form.js","todo_components/Item.js","todo_components/List.js","todo_components/TodoApp.js","chat_components/TweetForm.js","chat_components/TweetItem.js","chat_components/TweetList.js","chat_components/ChatApp.js","atoms/AlertModal.jsx","modal/ProfileModal.js","modal/MemberPlusModal.js","modal/GroupConfigModal.js","modal/ChangeGroupModal.js","calendar_components/CalendarApp.js","SideBar.js","TopBar.js","modal/TodoModal.js","TopPage.js","LoggedInRoute.js","App.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","AuthContext","React","createContext","AuthProvider","children","useState","user","setUser","users","setUsers","groups","setGroups","currentGroup","setCurrentGroup","loading","setLoading","useEffect","auth","onAuthStateChanged","firebaseUser","console","log","useLayoutEffect","firestore","collection","onSnapshot","snapshot","userContent","docs","map","doc","data","id","where","uid","groupContent","Provider","value","Spinner","Dimmer","active","Loader","size","content","SignIn","history","email","setEmail","password","setPassword","modal","setModal","reset","setReset","useContext","to","closeModal","resetPassword","emailAddress","sendPasswordResetEmail","then","alert","catch","err","Grid","textAlign","verticalAlign","className","Column","style","maxWidth","Header","as","icon","color","Icon","name","Segment","stacked","Input","fluid","type","iconPosition","placeholder","onChange","e","target","Button","basic","variant","marginTop","onClick","preventDefault","signInWithEmailAndPassword","push","Message","Modal","open","onClose","Content","onSubmit","SignUp","confirmPassword","setConfirmPassword","userName","setUserName","db","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","photoURL","set","avatar","birth","groupName","owner","FieldValue","arrayUnion","createdAt","Date","Form","setValue","allCheckBox","todos","setTodos","todoData","isDone","createdBy","orderBy","todo","width","display","justifyContent","padding","margin","circular","filter","forEach","delete","Item","userId","fontSize","Checkbox","checked","checkedTodos","textDecoration","List","listStyle","key","TodoApp","allSelect","TweetForm","text","setText","setTweets","setEmojiType","emojiType","images","setImages","imageUrl","setImageUrl","upload","setUpload","a","Promise","all","createUser","userRef","toDate","toString","message","setOpen","handleClose","ref","put","on","TaskEvent","STATE_CHANGED","next","error","complete","percent","bytesTransferred","totalBytes","child","getDownloadURL","fireBaseUrl","prevDelete","Image","src","find","pick","displayAvatar","TextArea","maxLength","resize","border","transparent","focus","alt","trim","length","image","groupId","files","TweetItem","timestamp","time","Row","stretched","divided","relaxed","Description","marginLeft","moment","fromNow","centered","get","res","refFromURL","deleteData","TweetList","tweets","tweet","ChatApp","emoji","native","onEmojiSelect","i18n","search","categories","recent","people","nature","foods","activity","places","objects","symbols","flags","custom","position","zIndex","AlertModal","title","close","columns","Portal","left","top","negative","ProfileModal","avatarImage","setAvatarImage","avatarUrl","setAvatarUrl","setName","passwordModal","setPasswordModal","avatarCheck","setAvatarCheck","alertOpen","setAlertOpen","closePasswordModal","onPasswordClick","imageAvatar","pullImage","height","Field","file","usersName","pullName","Actions","update","information","updateEmail","ChangeAddress","float","MemberPlusModal","addUserId","setAddUserId","idOpen","setIdOpen","memberPlus","group","groupIdGet","GroupConfigModal","updateGroupId","setUpdateGroupId","modalMemberPlus","setModalMemberPlus","checkId","radio","marginRight","chooseGroup","details","ChangeGroupModal","setGroupName","configModal","setConfigModal","openGroupConfigModal","addGroup","u","addBtn","onFormSubmit","CalendarApp","inverted","SideBar","modalChangeGroup","setModalChangeGroup","openChangeGroupModal","modalProfile","setModalProfile","openProfileModal","closeProfileModal","closeChangeGroupModal","scrollToTop","scroll","Responsive","minWidth","fontFamily","TopBar","openHamburger","visible","onlyTablet","borderBottom","onlyMobile","background","TodoModal","overflowY","TopPage","setVisible","modalTodo","setModalTodo","onlyComputer","Popup","trigger","signOut","backgroundColor","Sidebar","Pushable","Menu","animation","vertical","direction","Pusher","LoggedInRoute","Component","component","rest","render","props","App","exact","path","ReactDOM","document","getElementById"],"mappings":"mQAgBAA,gBAXuB,CACrBC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAKV,IAAMC,EAAUT,YACRA,I,QCfFU,EAAcC,IAAMC,gBAEpBC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACpBC,mBAAS,MADW,mBACrCC,EADqC,KAC/BC,EAD+B,OAElBF,mBAAS,MAFS,mBAErCG,EAFqC,KAE9BC,EAF8B,OAGhBJ,mBAAS,MAHO,mBAGrCK,EAHqC,KAG7BC,EAH6B,OAIJN,mBAAS,MAJL,mBAIrCO,EAJqC,KAIvBC,EAJuB,OAKdR,oBAAS,GALK,mBAKrCS,EALqC,KAK5BC,EAL4B,KA0D5C,OAnDAC,qBAAU,WASR,OAPA1B,EAAS2B,OAAOC,oBAAmB,SAACC,GAClCZ,EAAQY,GACY,MAAhBA,GACFJ,GAAW,MAIR,WACLK,QAAQC,IAAI,cAEb,IAGHC,2BAAgB,WACdhC,EACGiC,YACAC,WAAW,SACXC,YAAW,SAACC,GACX,IAAMC,EAAcD,EAASE,KAAKC,KAAI,SAACC,GACrC,OAAO,eACFA,EAAIC,OADT,CAEEC,GAAIF,EAAIE,QAGZvB,EAASkB,QAEZ,IAIHL,2BAAgB,WACVhB,GACFhB,EACGiC,YACAC,WAAW,UACXS,MAAM,QAAS,iBAAkB3B,EAAK4B,KACtCT,YAAW,SAACC,GACX,IAAMS,EAAeT,EAASE,KAAKC,KAAI,SAACC,GACtC,OAAO,eACFA,EAAIC,OADT,CAEEC,GAAIF,EAAIE,QAGZnB,EAAgBsB,EAAa,GAAGH,IAChCrB,EAAUwB,QAGf,CAAC7B,IAGF,kBAACN,EAAYoC,SAAb,CACEC,MAAO,CACL/B,OACAI,SACAC,YACAH,QACAI,eACAC,kBACAC,UACAC,eAGDX,I,kCCpEQkC,EANC,kBACd,kBAACC,EAAA,EAAD,CAAQC,QAAM,GACZ,kBAACC,EAAA,EAAD,CAAQC,KAAK,OAAOC,QAAS,qC,gFC8JlBC,EAhJA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACJxC,mBAAS,IADL,mBACvByC,EADuB,KAChBC,EADgB,OAEE1C,mBAAS,IAFX,mBAEvB2C,EAFuB,KAEbC,EAFa,OAGJ5C,oBAAS,GAHL,mBAGvB6C,EAHuB,KAGhBC,EAHgB,OAIJ9C,mBAAS,IAJL,mBAIvB+C,EAJuB,KAIhBC,EAJgB,OAKQC,qBAAWtD,GAAzCM,EALsB,EAKtBA,KAAMQ,EALgB,EAKhBA,QAASC,EALO,EAKPA,WAwBvB,GAAIT,EACF,OAAO,kBAAC,IAAD,CAAUiD,GAAG,MAGtB,IACMC,EAAa,kBAAML,GAAS,IAE5BM,EAAgB,SAACpB,GACrB,IACMqB,EAAerB,EADR/C,EAAS2B,OAInB0C,uBAAuBD,GACvBE,MAAK,WACJC,MAAM,0JACNzC,QAAQC,IAAI,0DACZmC,OAEDM,OAAM,SAACC,GAAD,OAAS3C,QAAQC,IAAI0C,OAGhC,OACE,oCACGjD,EACC,kBAAC,EAAD,MAEA,oCACE,kBAACkD,EAAA,EAAD,CAAMC,UAAU,SAASC,cAAc,SAASC,UAAU,OACxD,kBAACH,EAAA,EAAKI,OAAN,CAAaC,MAAO,CAAEC,SAAU,MAC9B,kBAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,MAAI,EAACC,MAAM,OAAOT,UAAU,UAC1C,kBAACU,EAAA,EAAD,CAAMC,KAAK,oBAAoBT,UAAU,kBAD3C,4BAIA,kBAAC,IAAD,KACE,kBAACU,EAAA,EAAD,CAASC,SAAO,GACd,kBAAC,IAAKC,MAAN,CACEC,OAAK,EACLC,KAAK,QACLR,KAAK,OACLS,aAAa,OACbN,KAAK,QACLO,YAAY,6CACZ9C,MAAOS,EACPsC,SAAU,SAACC,GACTtC,EAASsC,EAAEC,OAAOjD,UAGtB,kBAAC,IAAK0C,MAAN,CACEC,OAAK,EACLC,KAAK,WACLR,KAAK,YACLS,aAAa,OACbN,KAAK,WACLO,YAAY,iCACZ9C,MAAOW,EACPoC,SAAU,SAACC,GACTpC,EAAYoC,EAAEC,OAAOjD,UAGzB,kBAACkD,EAAA,EAAD,CACEC,OAAK,EACLC,QAAQ,YACR/C,KAAK,SACL2B,MAAO,CAAEqB,UAAW,IACpBC,QAtFI,SAACN,GACrBtE,GAAW,GACXsE,EAAEO,iBACG9C,GACHe,MAAM,oGAEHb,GACHa,MAAM,wFAERvE,EACG2B,OACA4E,2BAA2B/C,EAAOE,GAClCY,MAAK,WACJf,EAAQiD,KAAK,KACb1E,QAAQC,IAAI,wCACZN,GAAW,MAEZ+C,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EAAK,eA+DP,8BAWJ,kBAACgC,EAAA,EAAD,sCAEE,kBAAC,IAAD,CAAMxC,GAAG,WAAT,uBAEF,kBAACwC,EAAA,EAAD,gFAEE,0BAAMJ,QAxEF,kBAAMxC,GAAS,IAwEOkB,MAAO,CAAEK,MAAO,YAA1C,yBAMN,kBAACsB,EAAA,EAAD,CAAOC,KAAM/C,EAAOgD,QAAS1C,GAC3B,kBAACwC,EAAA,EAAMzB,OAAP,yDACA,kBAACyB,EAAA,EAAMG,QAAP,KACE,kBAAC,IAAD,CACEC,SAAU,WACR3C,EAAcL,KAGhB,6EACA,kBAAC2B,EAAA,EAAD,CACEE,KAAK,QACL5C,MAAOe,EACPgC,SAAU,SAACC,GACThC,EAASgC,EAAEC,OAAOjD,UAGtB,kBAACkD,EAAA,EAAD,CACEI,QAAS,WACPlC,EAAcL,KAFlB,gBAOA,kBAACmC,EAAA,EAAD,CAAQI,QAASnC,GAAjB,wCCRD6C,EAlIA,SAAC,GAAiB,IAAfxD,EAAc,EAAdA,QAAc,EACJxC,mBAAS,IADL,mBACvByC,EADuB,KAChBC,EADgB,OAEE1C,mBAAS,IAFX,mBAEvB2C,EAFuB,KAEbC,EAFa,OAGgB5C,mBAAS,IAHzB,mBAGvBiG,EAHuB,KAGNC,EAHM,OAIElG,mBAAS,IAJX,mBAIvBmG,EAJuB,KAIbC,EAJa,KAQxBC,GAFYpD,qBAAWtD,GAArBQ,MAEGlB,EAASiC,aAgDpB,OACE,oCACE,kBAACyC,EAAA,EAAD,CAAMC,UAAU,SAASC,cAAc,SAASC,UAAU,OACxD,kBAACH,EAAA,EAAKI,OAAN,CAAaC,MAAO,CAAEC,SAAU,MAG9B,kBAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,MAAI,EAACC,MAAM,OAAOT,UAAU,UAC1C,kBAACU,EAAA,EAAD,CAAMC,KAAK,cAAcT,UAAU,gBAAgBzB,KAAK,SAD1D,4BAIA,kBAAC,IAAD,CAAM0D,SAxDQ,SAACf,GACrBA,EAAEO,iBAEE5C,IAAasD,EAKjBhH,EACG2B,OACA0F,+BAA+B7D,EAAOE,GACtCY,MAAK,WACJ,IAAMtD,EAAOhB,EAAS2B,OAAO2F,YAE7BtG,EACGuG,cAAc,CACbC,YAAaN,EACbO,SACE,kKAEHnD,MAAK,WAEJ8C,EAAGlF,WAAW,SAASM,IAAIxB,EAAK4B,KAAK8E,IAAI,CACvCpC,KAAMtE,EAAKwG,YACXG,OAAQ3G,EAAKyG,SACb/E,GAAI1B,EAAK4B,IACTgF,MAAO,KAITR,EAAGlF,WAAW,UACXM,MACAkF,IAAI,CACHG,UAAW,qBACXC,MAAO9G,EAAK4B,IACZ1B,MAAOlB,EAASiC,UAAU8F,WAAWC,WAAWhH,EAAK4B,KACrDqF,UAAW,IAAIC,OAGnB3E,EAAQiD,KAAK,QAEdhC,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,SAtClBF,MAAM,qJAoD6BnB,KAAK,SAClC,kBAACmC,EAAA,EAAD,CAASC,SAAO,GACd,kBAAC,IAAKC,MAAN,CACEC,OAAK,EACLC,KAAK,OACLL,KAAK,WACLH,KAAK,OACLS,aAAa,OACbC,YAAY,iCACZ9C,MAAOmE,EACPpB,SAAU,SAACC,GACToB,EAAYpB,EAAEC,OAAOjD,UAGzB,kBAAC,IAAK0C,MAAN,CACEC,OAAK,EACLC,KAAK,QACLL,KAAK,QACLH,KAAK,OACLS,aAAa,OACbC,YAAY,mDACZ9C,MAAOS,EACPsC,SAAU,SAACC,GACTtC,EAASsC,EAAEC,OAAOjD,UAGtB,kBAAC,IAAK0C,MAAN,CACEC,OAAK,EACLC,KAAK,WACLL,KAAK,WACLH,KAAK,OACLS,aAAa,OACbC,YAAY,iCACZ9C,MAAOW,EACPoC,SAAU,SAACC,GACTpC,EAAYoC,EAAEC,OAAOjD,UAGzB,kBAAC,IAAK0C,MAAN,CACEC,OAAK,EACLC,KAAK,WACLL,KAAK,kBACLH,KAAK,OACLS,aAAa,OACbC,YAAY,mDACZ9C,MAAOiE,EACPlB,SAAU,SAACC,GACTkB,EAAmBlB,EAAEC,OAAOjD,UAGhC,kBAACkD,EAAA,EAAD,CAAQC,OAAK,EAACR,OAAK,EAACtC,KAAK,SAAzB,kEAKJ,kBAACqD,EAAA,EAAD,iFACe,kBAAC,IAAD,CAAMxC,GAAG,WAAT,2B,SCtBVkE,EA7GF,SAAC,GAAuD,IAArDpF,EAAoD,EAApDA,MAAOqF,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EACnCvE,qBAAWtD,GAApBM,GAD4C,EAC1DM,aAD0D,EAC5CN,MAkBhBoG,EAAKpH,EAASiC,YAGduG,EAAW,WACfpB,EAAGlF,WAAW,SACXM,MACAkF,IAAI,CACHrE,QAASN,EACT0F,QAAQ,EACRC,UAAW1H,EAAK4B,MAGjB0B,MAAK,WACJxC,QAAQC,IAAI,sDAEbyC,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,OAKlB/C,qBAAU,WACR1B,EACGiC,YACAC,WAAW,SACXyG,QAAQ,WACRxG,YAAW,SAACC,GACX,IAAMwG,EAAOxG,EAASE,KAAKC,KAAI,SAACC,GAC9B,OAAO,eACFA,EAAIC,OADT,CAEEC,GAAIF,EAAIE,QAGZ6F,EAASK,QAEZ,IAgBH,OACE,oCACE,kBAACnD,EAAA,EAAD,CACEE,KAAK,OACL5C,MAAOA,EACP+C,SAAU,SAACC,GAAD,OAAOqC,EAASrC,EAAEC,OAAOjD,UAErC,6BACA,6BACA,kBAAC2B,EAAA,EAAD,CAAMK,MAAO,CAAE8D,MAAO,UACpB,yBACE9D,MAAO,CACL+D,QAAS,OACTC,eAAgB,gBAChBF,MAAO,OACPG,QAAS,EACTC,OAAQ,cAGV,6BACE,kBAAChD,EAAA,EAAD,CACEC,OAAK,EACLgD,UAAQ,EACR/D,KAAK,0BACLkB,QAtCO,WACjBiC,EAEGa,QAAO,qBAAGV,UAEVW,SAAQ,YAAa,IAAV1G,EAAS,EAATA,GACV0E,EAAGlF,WAAW,SACXM,IAAIE,GACJ2G,SACA/E,MAAK,kBAAMxC,QAAQC,IAAI,uBACvByC,OAAM,SAACC,GAAD,OAAS3C,QAAQC,IAAI0C,aA+B5B,6BACE,kBAACwB,EAAA,EAAD,CAAQC,OAAK,EAACgD,UAAQ,EAAC/D,KAAK,QAAQkB,QArFtB,SAACN,GACvBA,EAAEO,iBACF+B,QAqFM,6BACE,kBAACpC,EAAA,EAAD,CAAQC,OAAK,EAACgD,UAAQ,EAAC/D,KAAK,OAAOkB,QAlGvB,SAACN,GACrBA,EAAEO,iBACY,KAAVvD,IAGJyF,IACAJ,EAAS,a,SCkCEkB,EA5CF,SAAC,GAAoD,IAAlDvG,EAAiD,EAAjDA,MAAOuF,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUE,EAAyB,EAAzBA,OAAQ/F,EAAiB,EAAjBA,GAAI6G,EAAa,EAAbA,OAC1CvI,EAASgD,qBAAWtD,GAApBM,KAaR,OACE,oCACGA,GACC,oCACGA,EAAK4B,MAAQ2G,GACZ,oCACE,yBAAKxE,MAAO,CAAEyE,SAAU,OAAQpD,UAAW,SACzC,kBAACqD,EAAA,EAAD,CACErE,MAAM,OACNsE,QAASjB,EACT/F,GAAIA,EACJ2D,QAtBM,SAACN,GACrB,IAAM4D,EAAerB,EAAM/F,KAAI,SAACqG,GAC9B,OAAI7C,EAAEC,OAAOtD,KAAOkG,EAAKlG,GAChB,eAAKkG,EAAZ,CAAkBH,QAASG,EAAKH,SAEzBG,KAGXL,EAASoB,IAeK5E,MAAO,CAAEkE,OAAQ,YAEnB,0BACElE,MAAO,CACL6E,eAAgBnB,EAAS,eAAiB,SAG3C1F,QCbJ8G,EAtBF,SAAC,GAAyB,IAAvBvB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACrB,OACE,wBAAIxD,MAAO,CAAE+E,UAAW,OAAQd,QAAS,EAAGH,MAAO,IAAKI,OAAQ,KAC7DX,EAAM/F,KAAI,SAACqG,GACV,OACE,oCACE,kBAAC,EAAD,CACE7F,MAAO6F,EAAKvF,QACZX,GAAIkG,EAAKlG,GACTqH,IAAKnB,EAAKlG,GACV4F,MAAOA,EACPC,SAAUA,EACVE,OAAQG,EAAKH,OACbc,OAAQX,EAAKF,kBCkBZsB,EA9BC,WAAO,IAAD,IACMjJ,mBAAS,IADf,mBACbuH,EADa,KACNC,EADM,OAEMxH,mBAAS,IAFf,mBAEbgC,EAFa,KAENqF,EAFM,KAYpB,OACE,6BACE,6BACE,wCACA,kBAAC,GAAD,GACErF,MAAOA,EACPqF,SAAUA,EACVG,SAAUA,EACVD,MAAOA,GAJT,yBAKYC,GALZ,6BAXc,WAClB,IAAM0B,EAAY3B,EAAM/F,KAAI,SAACqG,GAC3B,OAAO,eAAKA,EAAZ,CAAkBH,QAASG,EAAKH,YAElCF,EAAS0B,MAOL,IAQA,kBAAC,EAAD,CAAM3B,MAAOA,EAAOC,SAAUA,EAAUxF,MAAOA,O,sDCmOxCmH,EAhPG,SAAC,GAYZ,IAXLC,EAWI,EAXJA,KACAC,EAUI,EAVJA,QACAC,EASI,EATJA,UACAC,EAQI,EARJA,aACAC,EAOI,EAPJA,UACAC,EAMI,EANJA,OACAC,EAKI,EALJA,UACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,OACAC,EACI,EADJA,UACI,EACkC7G,qBAAWtD,GAAzCM,EADJ,EACIA,KAAME,EADV,EACUA,MAAOI,EADjB,EACiBA,aAGf8F,EAAKpH,EAASiC,YAGpBP,qBAAU,WACR1B,EACGiC,YACAC,WAAW,QAEXyG,QAAQ,YAAa,QACrBxG,WALH,uCAKc,WAAOC,GAAP,eAAA0I,EAAA,sEACYC,QAAQC,IAC5B5I,EAASE,KAAKC,IAAd,uCAAkB,WAAOC,GAAP,eAAAsI,EAAA,sEACMtI,EAAIC,OAAOwI,WADjB,cACVC,EADU,wCAGX1I,EAAIC,OAHO,CAIdC,GAAIF,EAAIE,GACRuF,UAAWzF,EAAIC,OAAOwF,UAAUkD,SAASC,WACzCH,WAAYC,KANE,2CAAlB,wDAFQ,OACJG,EADI,OAYVhB,EAAUgB,GAZA,2CALd,yDAmBC,IAGH,IA9BI,EAkEoBtK,oBAAS,GAlE7B,mBAkEG4F,EAlEH,KAkES2E,EAlET,KAoEEC,EAAc,kBAAMD,GAAQ,IAmB5BxE,EAAW,SAACf,IAChBA,EAAEO,iBACa,KAAXkE,IAKJK,GAAU,GACVS,GAAQ,GAEW7K,EAAQ+K,IAAR,kBAAuBhB,EAAOlF,OAAQmG,IAAIjB,GAClDkB,GACT1L,EAASS,QAAQkL,UAAUC,cAC3BC,EACAC,EACAC,IAZAxH,MAAM,yFAgBJsH,EAAO,SAACzJ,GAGZ,IAAM4J,EAAW5J,EAAS6J,iBAAmB7J,EAAS8J,WAAc,IACpEpK,QAAQC,IAAIiK,EAAU,UACtBlK,QAAQC,IAAIK,IAIR0J,EAAQ,SAACrH,GAAD,OAAS3C,QAAQC,IAAI0C,IAE7BsH,EAAW,WAGftL,EACG+K,IAAI,UACJW,MAAM3B,EAAOlF,MACb8G,iBACA9H,MAAK,SAAC+H,GACL1B,EAAY0B,OAoBZC,EAAa,WACjBzB,GAAU,GAEQpK,EAAQ+K,IAAR,kBAAuBhB,EAAOlF,OACtC+D,UAGZ,OACE,oCACE,kBAAC9D,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAK+D,KAAN,KACE,kBAACiD,EAAA,EAAD,CAAO5E,QAAM,EAAC6E,IA/HF,WACpB,GAAItL,GAASF,EAEX,OADeE,EAAMuL,MAAK,SAACC,GAAD,OAAUA,EAAKhK,KAAO1B,EAAK4B,OACvC+E,OA4HWgF,GAAiBvJ,KAAK,SACzC,kBAAC,IAAKyD,QAAN,KACE,kBAAC,IAAD,KACE,kBAAC+F,EAAA,EAAD,CACE/G,YAAY,wHACZgH,UAAU,MACV9H,MAAO,CAAE+H,OAAQ,OAAQC,OAAQ,QACjCrH,OAAK,EACLsH,aAAW,EACXC,OAAK,EACLtH,KAAK,OACL5C,MAAOoH,EACPrE,SAAU,SAACC,GAAD,OAAOqE,EAAQrE,EAAEC,OAAOjD,UAEnC6H,EAxCX,oCACE,kBAAC3E,EAAA,EAAD,CACEiD,UAAQ,EACRhD,OAAK,EACLf,KAAK,QACL/B,KAAK,OACLgC,MAAM,OACNiB,QAASiG,IAEX,kBAACC,EAAA,EAAD,CAAOnJ,KAAK,QAAQoJ,IAAK9B,EAAUwC,IAAI,cA+BT,SAM9B,6BACA,yBAAKrI,UAAU,aACb,kBAACoB,EAAA,EAAD,CACEC,OAAK,EACLgD,UAAQ,EACR/D,KAAK,SACLS,aAAa,QACbxC,KAAK,SACLiD,QAtHS,kBAAMiF,GAAQ,MAyHzB,kBAACrF,EAAA,EAAD,CACEC,OAAK,EACLgD,UAAQ,EACR/D,KAAK,gBACLS,aAAa,QACbxC,KAAK,SACLiD,QA3HW,WAGjBiE,EADEC,EACW,KAGA,YAuHT,kBAACtE,EAAA,EAAD,CACEC,OAAK,EACLgD,UAAQ,EACR/D,KAAK,sBACLS,aAAa,QACbxC,KAAK,SACLiD,QAvJW,SAACN,GACpBA,EAAEO,iBACkB,KAAhB6D,EAAKgD,SAA4B,IAAXvC,EACxBrG,MAAM,wFACG4F,EAAKiD,OAAS,IACvB7I,MAAM,yHAlBG,WACX,IAAM2G,EAAU9D,EAAGlF,WAAW,SAASM,IAAIxB,EAAK4B,KAChDwE,EAAGlF,WAAW,QAAQM,MAAMkF,IAAI,CAE9BO,UAAW,IAAIC,KACf7E,QAAS8G,EACTkD,MAAO3C,EACP4C,QAAShM,EACT2J,WAAYC,IAYZzI,GAEF2H,EAAQ,IACRS,GAAU,GACVF,EAAY,MAsIN,8BAaJ,kBAACjE,EAAA,EAAD,CAAOC,KAAMA,EAAMC,QAAS2E,GAC1B,kBAAC7E,EAAA,EAAMzB,OAAP,KAAe,0DACf,kBAACyB,EAAA,EAAMG,QAAP,oKAEE,kBAAC,IAAD,CAAMC,SAAUA,GACd,kBAACrB,EAAA,EAAD,CAAOE,KAAK,OAAOG,SApIT,SAACC,GACnB,IAAMsH,EAAQtH,EAAEC,OAAOuH,MAAM,GAC7B9C,EAAU4C,IAkIwCxI,UAAU,gBACpD,kBAACoB,EAAA,EAAD,CAAQC,OAAK,EAACd,MAAM,MAAMiB,QAASkF,GAAnC,gBAGA,kBAACtF,EAAA,EAAD,CAAQC,OAAK,EAACd,MAAM,QAAQiB,QAASS,GAArC,qB,kBCpJG0G,EA1FG,SAAC,GAA8C,IAsB1CC,EAtBF/C,EAA2C,EAA3CA,SAAUhI,EAAiC,EAAjCA,GAAIW,EAA6B,EAA7BA,QAASqK,EAAoB,EAApBA,KAAMJ,EAAc,EAAdA,QAAc,EACxBtJ,qBAAWtD,GAAzCM,EADsD,EACtDA,KAAME,EADgD,EAChDA,MAAOI,EADyC,EACzCA,aACf8F,EAAKpH,EAASiC,YAsCpB,OACE,oCACGX,IAAiBgM,EAChB,kBAAC/H,EAAA,EAAD,CAASV,UAAU,eACjB,kBAACH,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKiJ,IAAN,CAAUC,WAAS,GACjB,kBAAC,IAAD,CACEC,SAAO,EACPC,SAAO,EACP1K,KAAK,MACL2B,MAAO,CAAE6E,eAAgB,SAEzB,kBAAC,IAAKN,KAAN,CAAWzE,UAAU,eACnB,kBAAC0H,EAAA,EAAD,CAAO5E,QAAM,EAAC6E,IA5BR,WACpB,GAAItL,GAASF,EAEX,OADeE,EAAMuL,MAAK,SAACC,GAAD,OAAUA,EAAKhK,KAAO1B,EAAK4B,OACvC+E,OAyBiBgF,GAAiBvJ,KAAK,OAAO8F,UAAQ,IACxD,kBAAC,IAAKrC,QAAN,KACE,yBAAK9B,MAAO,CAAE+D,QAAS,SACrB,6BAvBA,WAClB,GAAI5H,GAASF,EAEX,OADaE,EAAMuL,MAAK,SAACC,GAAD,OAAUA,EAAKhK,KAAO1B,EAAK4B,OACvC0C,KAoBUkC,IACN,kBAAC,IAAKuG,YAAN,CACEhJ,MAAO,CACLK,MAAO,OACP4I,WAAY,SAGd,8BAzCDP,EAyCmBC,EAzCLO,IAAOR,GAAWS,cA4CnC,yBAAKnJ,MAAO,CAAEqB,UAAW,GAAIoD,SAAU,KAAOnG,IAEhD,6BAAMqH,EA/Db,kBAAC6B,EAAA,EAAD,CAAO4B,UAAQ,EAAC3B,IAAK9B,EAAUwC,IAAI,cAAc9J,KAAK,UA+DpB,MAC3B,kBAAC6C,EAAA,EAAD,CACEiD,UAAQ,EACRhD,OAAK,EACLf,KAAK,QACL/B,KAAK,OACLgC,MAAM,OACNP,UAAU,gBACVwB,QAAS,YApER,SAAC3D,GAClB0E,EAAGlF,WAAW,QACXM,IAAIE,GACJ0L,MACA9J,MAAK,SAAC+J,GACLA,EAAI7C,IAAInC,YAET7E,OAAM,SAACC,GAAD,OAAS3C,QAAQC,IAAI0C,MAE1BiG,GACFjK,EAAQ6N,WAAW5D,GAAUrB,SA2DbkF,CAAW7L,WAQvB,OCtEK8L,EAnBG,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQpE,EAAgB,EAAhBA,UAC3B,OACE,oCACGoE,EAAOlM,KAAI,SAACmM,GACX,OACE,kBAAC,EAAD,CACErL,QAASqL,EAAMrL,QACfqH,SAAUgE,EAAMrB,MAChB3K,GAAIgM,EAAMhM,GACV4K,QAASoB,EAAMpB,QACfjD,UAAWA,EACXqD,KAAMgB,EAAMzG,iB,SCgET0G,G,OArEC,WAAM,MAEI5N,mBAAS,IAFb,mBAEboJ,EAFa,KAEPC,EAFO,OAGQrJ,mBAAS,IAHjB,mBAGb0N,EAHa,KAGLpE,EAHK,OAMQtJ,mBAAS,IANjB,mBAMbyJ,EANa,KAMLC,EANK,OAOY1J,mBAAS,IAPrB,mBAOb2J,EAPa,KAOHC,EAPG,OAQQ5J,oBAAS,GARjB,mBAQb6J,EARa,KAQLC,EARK,OAWc9J,mBAAS,MAXvB,mBAWbwJ,EAXa,KAWFD,EAXE,KAaKtG,qBAAWtD,GAA5BY,aASR,OACE,oCACE,kBAAC,EAAD,CACE6I,KAAMA,EACNC,QAASA,EACTqE,OAAQA,EACRpE,UAAWA,EACXC,aAAcA,EACdC,UAAWA,EACXC,OAAQA,EACRC,UAAWA,EACXC,SAAUA,EACVC,YAAaA,EACbC,OAAQA,EACRC,UAAWA,IAEZN,GACC,kBAAC,IAAD,CACElE,QAAS,SAACuI,GAAD,OAzBK,SAACA,GAErBtE,GAAcC,GAEdH,EAAQD,EAAOyE,EAAMC,QAqBKC,CAAc,eAAKF,EAAN,CAAarE,gBAC9CwE,KAAM,CACJC,OAAQ,eACRC,WAAY,CACVD,OAAQ,2BACRE,OAAQ,6CACRC,OAAQ,kBACRC,OAAQ,8BACRC,MAAO,0CACPC,SAAU,6CACVC,OAAQ,8BACRC,QAAS,uCACTC,QAAS,eACTC,MAAO,SACPC,OAAQ,6BAGZ5K,MAAO,CACL6K,SAAU,WACVC,OAAQ,MAEVhB,QAAM,IAGV,kBAAC,EAAD,CAAWJ,OAAQA,EAAQpE,UAAWA,EAAWK,SAAUA,O,SCtEpDoF,EAAa,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAO5F,EAAwB,EAAxBA,KAAMxD,EAAkB,EAAlBA,KAAMqJ,EAAY,EAAZA,MAC9C,OACE,kBAACtL,EAAA,EAAD,CAAMuL,QAAS,GACb,kBAACvL,EAAA,EAAKI,OAAN,KACE,kBAACoL,EAAA,EAAD,CAAQtJ,QAASoJ,EAAOrJ,KAAMA,GAC5B,kBAACpB,EAAA,EAAD,CACER,MAAO,CACLoL,KAAM,MACNP,SAAU,QACVQ,IAAK,MACLP,OAAQ,MAGV,kBAAC5K,EAAA,EAAD,KAAS8K,GACT,2BAAI5F,GAEJ,kBAAClE,EAAA,EAAD,CAAQ5C,QAAQ,eAAegN,UAAQ,EAAChK,QAAS2J,SCqV9CM,EAzVM,SAAC,GAA2B,IAAzB1M,EAAwB,EAAxBA,MAAOM,EAAiB,EAAjBA,WAAiB,EACRnD,mBAAS,IADD,mBACvCwP,EADuC,KAC1BC,EAD0B,OAEZzP,mBAAS,IAFG,mBAEvC0P,EAFuC,KAE5BC,EAF4B,OAGtB3P,mBAAS,IAHa,mBAGvCuE,EAHuC,KAGjCqL,EAHiC,OAIpB5P,mBAAS,IAJW,mBAIvCyC,EAJuC,KAIhCC,EAJgC,OAKd1C,mBAAS,IALK,mBAKvC2C,EALuC,KAK7BC,EAL6B,OAMpB5C,mBAAS,IANW,gCAOpBA,mBAAS,KAPW,mBAOvC+C,EAPuC,KAOhCC,EAPgC,OAQJhD,oBAAS,GARL,mBAQvC6P,EARuC,KAQxBC,EARwB,OASlB9P,oBAAS,GATS,mBASvC6J,EATuC,KAS/BC,EAT+B,OAUR9J,oBAAS,GAVD,mBAUvC+P,EAVuC,KAU1BC,EAV0B,QAYZhQ,oBAAS,GAZG,qBAYvCiQ,GAZuC,MAY5BC,GAZ4B,SAiBtBjN,qBAAWtD,GAA3BQ,GAjBsC,GAiBtCA,MAAOF,GAjB+B,GAiB/BA,KACToG,GAAKpH,EAASiC,YAGdiP,GAAqB,kBAAML,GAAiB,IA4C5CM,GAAkB,SAACpO,GAClBA,GACHwB,MAAM,mKAER,IACMH,EAAerB,EADR/C,EAAS2B,OAInB0C,uBAAuBD,GACvBE,MAAK,WACJ4M,KACAnN,EAAS,OAEVS,OAAM,SAACC,GAAD,OAAS3C,QAAQC,IAAI0C,MAC9ByM,MAkDIrF,GAAO,SAACzJ,GAGZ,IAAM4J,EAAW5J,EAAS6J,iBAAmB7J,EAAS8J,WAAc,IACpEpK,QAAQC,IAAIiK,EAAU,WAIlBF,GAAQ,SAACrH,GAAD,OAAS3C,QAAQC,IAAI0C,IAG7BsH,GAAW,WAGftL,EACG+K,IAAI,SACJW,MAAMoE,EAAYjL,MAClB8G,iBACA9H,MAAK,SAAC+H,GACLqE,EAAarE,MAEd7H,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,OAWZ2M,GAAc,WAClB,GAAIlQ,IAASF,GAEX,OADaE,GAAMuL,MAAK,SAAC4E,GAAD,OAAeA,EAAU3O,KAAO1B,GAAK4B,OACjD+E,QA2ChB,OACE,oCACE,kBAACjB,EAAA,EAAD,CAAOC,KAAM/C,EAAOgD,QAAS1C,GAC3B,kBAACwC,EAAA,EAAMzB,OAAP,6CACA,kBAACyB,EAAA,EAAMG,QAAP,KA1CA+D,EAEA,kBAAC2B,EAAA,EAAD,CACEC,IAAKiE,EACLa,OAAQ,IACRzI,MAAO,IACPzF,KAAK,QACL8F,UAAQ,EACRnE,MAAO,CAAEkE,OAAQ,YAKnB,oCACGmI,KACC,kBAAC7E,EAAA,EAAD,CACEC,IAAKtL,IAASkQ,KACdE,OAAQ,IACRzI,MAAO,IACPzF,KAAK,QACL8F,UAAQ,EACRnE,MAAO,CAAEkE,OAAQ,YAGnB,kBAACsD,EAAA,EAAD,CACEC,IAAKxL,GAAOA,GAAKyG,SAAW,KAC5B6J,OAAQ,IACRzI,MAAO,IACPzF,KAAK,QACL8F,UAAQ,EACRnE,MAAO,CAAEkE,OAAQ,aAcrB,yBACElE,MAAO,CAAE8D,MAAO,OAAQC,QAAS,OAAQC,eAAgB,WAEzD,kBAAC9C,EAAA,EAAD,CACEI,QA5GO,WACG,KAAhBkK,GAIJ1F,GAAU,GACVkG,GAAe,GAEItQ,EAChB+K,IADgB,iBACF+E,EAAYjL,OAC1BmG,IAAI8E,GACI7E,GACT1L,EAASS,QAAQkL,UAAUC,cAC3BC,GACAC,GACAC,KAbAxH,MAAM,yFA2GE2B,OAAK,EACLnB,MAAO,CAAE8D,MAAO,MAAOI,OAAQ,WAHjC,2DAQF,kBAAC,IAAD,KACE,kBAAC,IAAKsI,MAAN,KACE,6EACA,kBAAC9L,EAAA,EAAD,CAAOE,KAAK,OAAOG,SA7MT,SAACC,GACrB,IAAMyL,EAAOzL,EAAEC,OAAOuH,MAAM,GAC5BiD,EAAegB,OA6MP,kBAAC,IAAKD,MAAN,KACE,iEACA,kBAAC9L,EAAA,EAAD,CACEE,KAAK,OACL5C,MAAOuC,EACPQ,SAAU,SAACC,GACT4K,EAAQ5K,EAAEC,OAAOjD,QAEnB8C,YAAa7E,GAnFV,WACf,GAAIA,IAAQE,GAEV,OADaA,GAAMuL,MAAK,SAACgF,GAAD,OAAezQ,GAAK4B,MAAQ6O,EAAU/O,MAClD4C,KAgFkBoM,GAAa,QAKzC,kBAAChL,EAAA,EAAMiL,QAAP,CAAe5M,MAAO,CAAE8D,MAAO,SAC7B,kBAAC5C,EAAA,EAAD,CAAQI,QAhOU,kBAAMwK,GAAiB,IAgOL3K,OAAK,EAACd,MAAM,QAC9C,kBAACC,EAAA,EAAD,CAAMC,KAAK,QADb,8CAIA,kBAACW,EAAA,EAAD,CAAQI,QAASnC,EAAYgC,OAAK,EAACd,MAAM,OACvC,kBAACC,EAAA,EAAD,CAAMC,KAAK,WADb,kCAIA,kBAACW,EAAA,EAAD,CAAQC,OAAK,EAACd,MAAM,QAAQiB,QA/NjB,WAEZf,GAASwL,GAKVxL,GACF8B,GAAGlF,WAAW,SACXM,IAAIxB,GAAK4B,KACTgP,OAAO,CACNtM,SAEDhB,MAAK,WACJJ,OAEDM,OAAM,SAACC,GAAD,OAAS3C,QAAQC,IAAI0C,MAG5B8L,GAEFnJ,GAAGlF,WAAW,SACXM,IAAIxB,GAAK4B,KACTgP,OAAO,CACNjK,OAAQ8I,IAETnM,MAAK,WACJJ,IACA6M,GAAe,GACfP,EAAe,OAEhBhM,OAAM,SAACC,GAAD,OAAS3C,QAAQC,IAAI0C,OA5B9BF,MAAM,kEA6NA,kBAACc,EAAA,EAAD,CAAMC,KAAK,cADb,kBAOJ,kBAACoB,EAAA,EAAD,CAAOC,KAAMiK,EAAehK,QAASsK,IACnC,kBAACxK,EAAA,EAAMzB,OAAP,CAAcF,MAAO,CAAE8D,MAAO,OAAQC,QAAS,SAC7C,+HAEF,kBAACpC,EAAA,EAAMG,QAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAK0K,MAAN,KACE,+FACA,kBAAC9L,EAAA,EAAD,CACE1C,MAAOS,EACPsC,SAAU,SAACC,GACTtC,EAASsC,EAAEC,OAAOjD,QAEpB4C,KAAK,OACLE,YAAa7E,GAAOA,GAAKwC,MAAQ,MAGrC,kBAAC,IAAK+N,MAAN,KACE,uNAGA,kBAAC9L,EAAA,EAAD,CACE1C,MAAOW,EACPoC,SAAU,SAACC,GACTpC,EAAYoC,EAAEC,OAAOjD,QAEvB4C,KAAK,cAGT,kBAACM,EAAA,EAAD,CACEC,OAAK,EACLd,MAAM,QACNiB,QAAS,YAhNC,SAAC7C,EAAOE,GAC5B,IAAMmO,EAAc7R,EAAS2B,OAAO2F,YAEpC,GAAK9D,EAEE,GAAKE,EAEL,CACc1D,EAChB2B,OAEA4E,2BAA2B/C,EAAOE,GAErCmO,EACGC,YAAYtO,GACZc,MAAK,WACJb,EAAS,IACTE,EAAY,IACZO,OAEDM,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,WAfhBF,MAAM,6FAFNA,MAAM,oGA6MIwN,CAAcvO,EAAOE,KAJzB,kBAWJ,kBAACgD,EAAA,EAAMG,QAAP,KACE,kBAAC,IAAD,CACEC,SAAU,WACRqK,GAAgBrN,KAGlB,kBAAC,IAAKyN,MAAN,KACE,6KACA,kBAAC9L,EAAA,EAAD,CACEE,KAAK,QACL5C,MAAOe,EACPgC,SAAU,SAACC,GACThC,EAASgC,EAAEC,OAAOjD,WAIxB,kBAACkD,EAAA,EAAD,CACEC,OAAK,EACLd,MAAM,QACNiB,QAAS,WACP8K,GAAgBrN,KAJpB,gBASA,kBAACmC,EAAA,EAAD,CACEC,OAAK,EACLd,MAAM,MACNL,MAAO,CAAEiN,MAAO,SAChB3L,QAAS6K,IAJX,mBAWN,kBAAC,EAAD,CACEvK,KAAMqK,GACNhB,MAlUa,kBAAMiB,IAAa,IAmUhClB,MAAM,eACN5F,KAAK,yH,kBCzQE8H,GApFS,SAAC,GAAoC,IAAlCrO,EAAiC,EAAjCA,MAAOM,EAA0B,EAA1BA,WAAYoJ,EAAc,EAAdA,QAAc,EACjCtJ,qBAAWtD,GAA5BM,EADkD,EAClDA,KAAMI,EAD4C,EAC5CA,OAD4C,EAExBL,mBAAS,IAFe,mBAEnDmR,EAFmD,KAExCC,EAFwC,OAG9BpR,oBAAS,GAHqB,mBAGnDqR,EAHmD,KAG3CC,EAH2C,KAmBpDC,EAAa,SAAC5P,GAClB1C,EACGiC,YACAC,WAAW,UACXM,IAXc,WACjB,GAAIpB,EAEF,OADoBA,EAAOqL,MAAK,SAAC8F,GAAD,OAAWA,EAAM7P,KAAO4K,KACrC5K,GAQd8P,IACJZ,OAAO,CAEN1Q,MAAOlB,EAASiC,UAAU8F,WAAWC,WAAWtF,KAEpDyP,EAAa,IACbjO,KAGF,OACE,oCACE,kBAACwC,EAAA,EAAD,CAAOtD,KAAK,QAAQuD,KAAM/C,EAAOgD,QAAS1C,GACxC,kBAACwC,EAAA,EAAMzB,OAAP,mDACA,kBAACyB,EAAA,EAAMG,QAAP,KACE,+IACA,qEACA,kBAACxB,EAAA,EAAD,CAAMC,KAAK,gBAlCD,WAChB,GAAIlE,EAEF,OADoBA,EAAOqL,MAAK,SAAC8F,GAAD,OAAWA,EAAM7P,KAAO4K,KACrCzF,UAgCdA,GACD,kBAAC,IAAD,KACE,kBAACpC,EAAA,EAAD,CACEE,KAAK,OACL5C,MAAOmP,EACPpM,SAAU,SAACC,GACToM,EAAapM,EAAEC,OAAOjD,UAG1B,kBAACkD,EAAA,EAAD,CACEI,QAAS,WACPiM,EAAWJ,KAFf,iBAQF,kBAAC,IAAD,KACE,kBAACjM,EAAA,EAAD,CACEC,OAAK,EACLG,QAAS,WACPgM,GAAWD,KAHf,0CAQCA,GAAU,8BAAOpR,EAAK4B,OAG3B,kBAAC8D,EAAA,EAAMiL,QAAP,KACE,kBAAC1L,EAAA,EAAD,CAAQC,OAAK,EAACd,MAAM,MAAMiB,QAASnC,GACjC,kBAACmB,EAAA,EAAD,CAAMC,KAAK,WADb,kCAIA,kBAACW,EAAA,EAAD,CAAQC,OAAK,EAACd,MAAM,SAClB,kBAACC,EAAA,EAAD,CAAMC,KAAK,cADb,oBC0CKmN,GA1GU,SAAC,GAA2B,IAAzB7O,EAAwB,EAAxBA,MAAOM,EAAiB,EAAjBA,WAAiB,EACdF,qBAAWtD,GAAvCU,EAD0C,EAC1CA,OAD0C,KAClCG,gBACQR,mBAAS,KAFiB,mBAE3CuE,EAF2C,KAErCqL,EAFqC,OAGR5P,mBAAS,MAHD,mBAG3C2R,EAH2C,KAG5BC,EAH4B,OAIJ5R,oBAAS,GAJL,mBAI3C6R,EAJ2C,KAI1BC,EAJ0B,KAM5CzL,EAAKpH,IAASiC,YAwBpBP,qBAAU,WACHN,GAGLuR,EAAiBvR,EAAO,GAAGsB,MAC1B,CAACtB,IA0BJ,OACE,oCACE,kBAACsF,EAAA,EAAD,CAAOtD,KAAK,QAAQuD,KAAM/C,EAAOgD,QAAS1C,GACxC,kBAACwC,EAAA,EAAMzB,OAAP,6CACA,kBAACyB,EAAA,EAAMG,QAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAK0K,MAAN,KACE,uEA9BQ,WAClB,GAAKnQ,EAGL,OAAOA,EAAOmB,KAAI,SAACgQ,GACjB,IAAMO,EAAUP,EAAM7P,KAAOgQ,EAC7B,OACE,kBAAC,IAAKnB,MAAN,KACE,kBAAC9H,EAAA,EAAD,CACEsJ,OAAK,EACLrJ,QAASoJ,EACTpQ,GAAI6P,EAAM7P,GACV2D,QAAS,SAACN,GACR4M,EAAiB5M,EAAEC,OAAOtD,KAE5BqC,MAAO,CAAEiO,YAAa,UAEvBT,EAAM1K,cAcFoL,IAEH,kBAAC,IAAK1B,MAAN,KACE,6EACA,kBAAC9L,EAAA,EAAD,CACE1C,MAAOuC,EACPQ,SAAU,SAACC,GACT4K,EAAQ5K,EAAEC,OAAOjD,aAM3B,kBAAC2D,EAAA,EAAMiL,QAAP,KACE,kBAAC1L,EAAA,EAAD,CAAQC,OAAK,EAACd,MAAM,MAAMiB,QAASnC,GACjC,kBAACmB,EAAA,EAAD,CAAMC,KAAK,WADb,kCAIA,kBAACW,EAAA,EAAD,CAAQI,QA/EY,kBAAMwM,GAAmB,IA+EP3M,OAAK,EAACd,MAAM,UAChD,kBAACC,EAAA,EAAD,CAAMC,KAAK,UADb,8CAIA,kBAACW,EAAA,EAAD,CAAQC,OAAK,EAACd,MAAM,QAAQiB,QA/EjB,WACZf,GAIL8B,EAAGlF,WAAW,UACXM,IAAIkQ,GACJtE,MACA9J,MAAK,SAAC4O,GAELA,EAAQ1H,IAAIoG,OAAO,CACjB/J,UAAWvC,OAGjBqL,EAAQ,IACRzM,KAbEK,MAAM,0FA8EA,kBAACc,EAAA,EAAD,CAAMC,KAAK,mBADb,gBAIA,kBAAC,GAAD,CACE1B,MAAOgP,EACP1O,WAxFmB,kBAAM2O,GAAmB,IAyF5CvF,QAASoF,QCYNS,GAtHU,SAAC,GAA2B,IAAzBvP,EAAwB,EAAxBA,MAAOM,EAAiB,EAAjBA,WAAiB,EACDF,qBAAWtD,GAApDU,EAD0C,EAC1CA,OAAQF,EADkC,EAClCA,MAAOF,EAD2B,EAC3BA,KAAMO,EADqB,EACrBA,gBADqB,EAGhBR,mBAAS,IAHO,mBAG3C8G,EAH2C,KAGhCuL,EAHgC,OAIZrS,oBAAS,GAJG,mBAI3CsS,EAJ2C,KAI9BC,EAJ8B,KAM5CC,EAAuB,kBAAMD,GAAe,IAG5ClM,EAAKpH,EAASiC,YAwBduR,EAAW,WACfpM,EAAGlF,WAAW,UACXM,MACAkF,IAAI,CACHG,YACAC,MAAO9G,EAAK4B,IACZ1B,MAAOlB,EAASiC,UAAU8F,WAAWC,WAAWhH,EAAK4B,KACrDqF,UAAW,IAAIC,QA2BrB,OACE,oCACE,kBAACxB,EAAA,EAAD,CAAOC,KAAM/C,EAAOgD,QAAS1C,GAC3B,kBAACwC,EAAA,EAAMzB,OAAP,6CACA,kBAACyB,EAAA,EAAMG,QAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAK0K,MAAN,KACE,uEACA,kBAAC9L,EAAA,EAAD,CACE1C,MAAO8E,EACP/B,SAAU,SAACC,GACTqN,EAAarN,EAAEC,OAAOjD,QAExB8C,YAAY,oCAGhB,kBAAC,IAAK0L,MAAN,KACE,uEAvCG,WACb,GAAInQ,GAAUJ,GAAQE,EACpB,OAAOE,EAAOmB,KAAI,SAACgQ,GAEjB,GADgBA,EAAMrR,MAAMiI,QAAO,SAACsK,GAAD,OAAOA,IAAMzS,EAAK4B,OACzCwK,OAAS,EACnB,OACE,kBAACnH,EAAA,EAAD,CACEI,QAAS,WAzBD,IAACiH,IA0BKiF,EAAM7P,GAzB9BnB,EAAgB+L,GAChBpJ,KA0BUyB,KAAK,SACLO,OAAK,EACLd,MAAM,QAELmN,EAAM1K,cA0BN6L,MAIP,kBAAChN,EAAA,EAAMiL,QAAP,KACE,kBAAC1L,EAAA,EAAD,CAAQC,OAAK,EAACd,MAAM,MAAMiB,QAASnC,GACjC,kBAACmB,EAAA,EAAD,CAAMC,KAAK,WADb,kCAIA,kBAACW,EAAA,EAAD,CAAQC,OAAK,EAACd,MAAM,QAAQiB,QAASkN,GACnC,kBAAClO,EAAA,EAAD,CAAMC,KAAK,UAAUe,QAASkN,IADhC,gBAIA,kBAACtN,EAAA,EAAD,CACEC,OAAK,EACLd,MAAM,QACNiB,QAAS,YAzFE,SAACwB,GACpB,GAAkB,KAAdA,EACFtD,MAAM,4FACD,IACLnD,EAAO+H,QAAO,SAACoJ,GAAD,OAAWA,EAAM1K,YAAcA,KAAWuF,OAAS,EAGjE,YADA7I,MAAM,0GAGN6O,EAAa,IACbI,KAgFQG,CAAa9L,KAGf,kBAACxC,EAAA,EAAD,CAAMC,KAAK,SAPb,kBAYJ,kBAAC,GAAD,CACE1B,MAAOyP,EACPnP,WAzGwB,kBAAMoP,GAAe,Q,oBCRxCM,I,OAAc,WAAO,IAAD,EACL7S,mBAAS,IAAImH,MADR,mBACxBnF,EADwB,KACjB+C,EADiB,KAG/B,OACE,yBAAKjB,UAAU,UACb,yBAAKA,UAAU,qBACb,0BAAMA,UAAU,8BACd,kBAAC,KAAD,CAAUiB,SAAUA,EAAU/C,MAAOA,KAEvC,kBAAC2D,EAAA,EAAD,CAAOtD,KAAK,SACV,kBAACsD,EAAA,EAAMzB,OAAP,iCACA,kBAACyB,EAAA,EAAMG,QAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAK0K,MAAN,KACE,kDAIN,kBAAC7K,EAAA,EAAMiL,QAAP,KACE,kBAACtM,EAAA,EAAD,CAAMC,KAAK,cADb,qBAGE,kBAACW,EAAA,EAAD,CAAQb,MAAM,MAAMyO,UAAQ,GAC1B,kBAACxO,EAAA,EAAD,CAAMC,KAAK,WADb,8C,UCqHGwO,GAzIC,SAAC,GAMV,IALLC,EAKI,EALJA,iBACAC,EAII,EAJJA,oBACAC,EAGI,EAHJA,qBACAC,EAEI,EAFJA,aACAC,EACI,EADJA,gBAGMC,EAAmB,kBAAMD,GAAgB,IACzCE,EAAoB,kBAAMF,GAAgB,IAC1CG,EAAwB,kBAAMN,GAAoB,IAElDO,EAAc,WAClBC,iBAAOD,eAGT,OACE,oCACE,6BAEE,kBAACE,GAAA,EAAD,CAAYC,SAAU,MACpB,kBAAChQ,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKiJ,IAAN,KACE,yBACEtH,QAASkO,EACTxP,MAAO,CACLyE,SAAU,OACVmL,WAAY,mBACZ9L,MAAO,OACPlE,UAAW,WANf,MASK,0BAAMI,MAAO,CAAEK,MAAO,QAAtB,OAGP,kBAACV,EAAA,EAAKiJ,IAAN,CAAU5I,MAAO,CAAEqB,UAAW,KAC5B,yBAAKrB,MAAO,CAAE8D,MAAO,OAAQlE,UAAW,WACtC,kBAACsB,EAAA,EAAD,CACEiD,UAAQ,EACR9D,MAAM,OACNhC,KAAK,MACLiD,QAAS+N,EACTP,UAAQ,GAER,kBAACxO,EAAA,EAAD,CAAMC,KAAK,gBAPb,yCASA,kBAAC,EAAD,CACE1B,MAAOsQ,EACPhQ,WAAYmQ,MAIlB,kBAAC3P,EAAA,EAAKiJ,IAAN,CAAU5I,MAAO,CAAEqB,UAAW,KAC5B,yBAAKrB,MAAO,CAAE8D,MAAO,OAAQlE,UAAW,WACtC,kBAACsB,EAAA,EAAD,CACEiD,UAAQ,EACR9F,KAAK,MACLgC,MAAM,SACNiB,QAAS4N,EACTJ,UAAQ,GAER,kBAACxO,EAAA,EAAD,CAAMC,KAAK,mBAPb,wCAUA,kBAAC,GAAD,CACE1B,MAAOmQ,EACP7P,WAAYoQ,MAIlB,kBAAC5P,EAAA,EAAKiJ,IAAN,CAAU5I,MAAO,CAAEqB,UAAW,GAAI+J,KAAM,KACtC,kBAAC,GAAD,SAMN,kBAACsE,GAAA,EAAD,CAAYzP,SAAU,MACpB,kBAACN,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKiJ,IAAN,CAAU5I,MAAO,CAAEqB,UAAW,KAC5B,yBACEC,QAASkO,EACTxP,MAAO,CACLyE,SAAU,OACVmL,WAAY,mBACZ9L,MAAO,OACPlE,UAAW,WANf,MASK,0BAAMI,MAAO,CAAEK,MAAO,QAAtB,OAGP,kBAACV,EAAA,EAAKiJ,IAAN,CAAU5I,MAAO,CAAEqB,UAAW,KAC5B,yBAAKrB,MAAO,CAAE8D,MAAO,SACnB,kBAAC5C,EAAA,EAAD,CACEiD,UAAQ,EACR9D,MAAM,OACNhC,KAAK,MACLiD,QAAS+N,EACTP,UAAQ,GAER,kBAACxO,EAAA,EAAD,CAAMC,KAAK,gBAPb,yCASA,kBAAC,EAAD,CACE1B,MAAOsQ,EACPhQ,WAAYmQ,MAIlB,kBAAC3P,EAAA,EAAKiJ,IAAN,CAAU5I,MAAO,CAAEqB,UAAW,KAC5B,yBAAKrB,MAAO,CAAE8D,MAAO,SACnB,kBAAC5C,EAAA,EAAD,CACEiD,UAAQ,EACR9F,KAAK,MACLgC,MAAM,SACNiB,QAAS4N,EACTJ,UAAQ,GAER,kBAACxO,EAAA,EAAD,CAAMC,KAAK,mBAPb,wCAUA,kBAAC,GAAD,CACE1B,MAAOmQ,EACP7P,WAAYoQ,MAIlB,kBAAC5P,EAAA,EAAKiJ,IAAN,CAAU5I,MAAO,CAAEqB,UAAW,KAC5B,kBAAC,GAAD,YCXCwO,GArHA,SAAC,GAMT,IALLb,EAKI,EALJA,iBACAC,EAII,EAJJA,oBACAC,EAGI,EAHJA,qBACAY,EAEI,EAFJA,cACAC,EACI,EADJA,QAEMP,EAAc,WAClBC,iBAAOD,eAFL,EAKoCxT,oBAAS,GAL7C,mBAKGmT,EALH,KAKiBC,EALjB,KAWJ,OACE,oCACE,kBAACM,GAAA,EAAeA,KAAWM,WACzB,yBACEhQ,MAAO,CACL+D,QAAS,OACTC,eAAgB,gBAChBiM,aAAc,mBAGhB,yBACE3O,QAASkO,EACTxP,MAAO,CACLyE,SAAU,OACVmL,WAAY,mBACZrD,OAAQ,GACRlL,UAAW,GACX4H,WAAY,KAPhB,MAUK,0BAAMjJ,MAAO,CAAEK,MAAO,QAAtB,MAEL,yBAAKL,MAAO,CAAEiO,YAAa,KACzB,yBAAKjO,MAAO,CAAEkE,OAAQ,KACpB,kBAAChD,EAAA,EAAD,CACEiD,UAAQ,EACR9D,MAAM,OACNhC,KAAK,OACLiD,QAhCW,kBAAM8N,GAAgB,IAiCjCN,UAAQ,GAER,kBAACxO,EAAA,EAAD,CAAMC,KAAK,gBAPb,yCASA,kBAAC,EAAD,CACE1B,MAAOsQ,EACPhQ,WAtCY,kBAAMiQ,GAAgB,MAwCpC,yBAAKpP,MAAO,CAAEqB,UAAW,IACvB,kBAACH,EAAA,EAAD,CACEiD,UAAQ,EACR9F,KAAK,OACLgC,MAAM,SACNiB,QAAS4N,EACTJ,UAAQ,GAER,kBAACxO,EAAA,EAAD,CAAMC,KAAK,mBAPb,wCAUA,kBAAC,GAAD,CACE1B,MAAOmQ,EACP7P,WApDc,kBAAM8P,GAAoB,WA2DpD,kBAACS,GAAA,EAAeA,KAAWQ,WACzB,yBACElQ,MAAO,CACL+D,QAAS,OACTC,eAAgB,gBAChBiM,aAAc,mBAGhB,yBACE3O,QAASkO,EACTxP,MAAO,CACLyE,SAAU,OACVmL,WAAY,mBACZrD,OAAQ,GACRlL,UAAW,GACX4H,WAAY,KAPhB,MAUK,0BAAMjJ,MAAO,CAAEK,MAAO,QAAtB,MAEL,yBAAKL,MAAO,CAAEkE,OAAQ,KACpB,4BACElE,MAAO,CAAEmQ,WAAY,OAAQnI,OAAQ,QACrC1G,QAASwO,GAET,6BACGC,EACC,kBAACzP,EAAA,EAAD,CAAMC,KAAK,SAASP,MAAO,CAAEyE,SAAU,GAAIpD,UAAW,MAEtD,kBAACf,EAAA,EAAD,CACEC,KAAK,UACLP,MAAO,CAAEyE,SAAU,GAAIpD,UAAW,aC1FvC+O,GAlBG,SAAC,GAA2B,IAAzBvR,EAAwB,EAAxBA,MAAOM,EAAiB,EAAjBA,WAC1B,OACE,oCACE,kBAACwC,EAAA,EAAD,CAAOtD,KAAK,QAAQuD,KAAM/C,EAAOgD,QAAS1C,GACxC,kBAACwC,EAAA,EAAMzB,OAAP,aACA,kBAACyB,EAAA,EAAMG,QAAP,CAAe9B,MAAO,CAAEuM,OAAQ,IAAK8D,UAAW,WAC9C,kBAAC,EAAD,OAEF,kBAAC1O,EAAA,EAAMiL,QAAP,KACE,kBAAC1L,EAAA,EAAD,CAAQC,OAAK,EAACd,MAAM,MAAMiB,QAASnC,GAAnC,oB,8BCwQKmR,GA9PC,WAAO,IAAD,EAShBrR,qBAAWtD,GAPbU,EAFkB,EAElBA,OACAC,EAHkB,EAGlBA,UACAL,EAJkB,EAIlBA,KACAE,EALkB,EAKlBA,MACAI,EANkB,EAMlBA,aACAE,EAPkB,EAOlBA,QACAC,EARkB,EAQlBA,WARkB,EAW4BV,oBAAS,GAXrC,mBAWbgT,EAXa,KAWKC,EAXL,OAYUjT,oBAAS,GAZnB,mBAYb+T,EAZa,KAYJQ,EAZI,OAaoBvU,oBAAS,GAb7B,mBAabmT,EAba,KAaCC,EAbD,OAccpT,oBAAS,GAdvB,mBAcbwU,EAda,KAcFC,EAdE,KAoBdvB,EAAuB,kBAAMD,GAAoB,IAIjDtC,EAAW,WACf,GAAIpQ,GAAgBF,EAElB,OADaA,EAAOqL,MAAK,SAAC8F,GAAD,OAAWA,EAAM7P,KAAOpB,KACrCuG,WAQhB,OAJI7G,GAAQE,IACVO,GAAW,GAIX,oCACGD,EACC,kBAAC,EAAD,MAEA,oCAEE,kBAACiT,GAAA,EAAeA,KAAWgB,aACzB,yBAAK1Q,MAAO,CAAEiE,QAAS,MAAO5C,UAAW,KACvC,kBAAC1B,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKiJ,IAAN,KACE,kBAACjJ,EAAA,EAAKI,OAAN,CAAa+D,MAAO,GAClB,yBAAK9D,MAAO,CAAE6K,SAAU,QAAS/G,MAAO,QACtC,kBAAC,GAAD,CACEkL,iBAAkBA,EAClBC,oBAAqBA,EACrBC,qBAAsBA,EACtBC,aAAcA,EACdC,gBAAiBA,MAIvB,kBAACzP,EAAA,EAAKI,OAAN,CAAa+D,MAAO,GAClB,6BAAM6I,KACN,kBAAC,EAAD,OAEF,kBAAChN,EAAA,EAAKI,OAAN,CAAa+D,MAAO,EAAGhE,UAAU,cAC/B,yBAAKE,MAAO,CAAE6K,SAAU,UACtB,kBAAC,EAAD,MACA,kBAAC8F,GAAA,EAAD,CACEC,QACE,kBAAC1P,EAAA,EAAD,CACE7C,KAAK,OACL+B,KAAK,WACL+D,UAAQ,EACR9D,MAAM,MACNyO,UAAQ,EACRhP,UAAU,YACVwB,QAAS,WACPrG,EACG2B,OACAiU,UACAtR,MAAK,WACJ7C,GAAW,GACXJ,EAAU,SAEXmD,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EAAK,oBAK3BpB,QAAQ,iCACR6C,OAAK,UAUnB,kBAACuO,GAAA,EAAeA,KAAWM,WACzB,6BACE,yBACEhQ,MAAO,CACL8K,OAAQ,GACRgG,gBAAiB,QACjBjG,SAAU,QACVQ,IAAK,EACLvH,MAAO,SAGT,kBAAC,GAAD,CACEkL,iBAAkBA,EAClBC,oBAAqBA,EACrBC,qBAAsBA,KAG1B,yBAAKlP,MAAO,CAAEiE,QAAS,MAAO5C,UAAW,KACvC,kBAAC1B,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKiJ,IAAN,KACE,kBAACjJ,EAAA,EAAKI,OAAN,CAAa+D,MAAO,GAClB,yBAAK9D,MAAO,CAAEqB,UAAW,KAAOsL,KAChC,kBAAC,EAAD,OAEF,kBAAChN,EAAA,EAAKI,OAAN,CAAa+D,MAAO,EAAGhE,UAAU,cAC/B,yBAAKE,MAAO,CAAE6K,SAAU,UACtB,kBAAC,EAAD,MACA,kBAAC8F,GAAA,EAAD,CACEC,QACE,kBAAC1P,EAAA,EAAD,CACE7C,KAAK,OACL+B,KAAK,WACL+D,UAAQ,EACR9D,MAAM,MACNyO,UAAQ,EACRhP,UAAU,YACVwB,QAAS,WACPrG,EACG2B,OACAiU,UACAtR,MAAK,WACJ7C,GAAW,GACXJ,EAAU,SAEXmD,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EAAK,oBAK3BpB,QAAQ,iCACR6C,OAAK,WAWrB,kBAACuO,GAAA,EAAeA,KAAWQ,WACzB,6BACE,yBACElQ,MAAO,CACL8K,OAAQ,GACRgG,gBAAiB,QACjBjG,SAAU,QACVQ,IAAK,EACLvH,MAAO,SAGT,kBAAC,GAAD,CACEkL,iBAAkBA,EAClBC,oBAAqBA,EACrBC,qBAAsBA,EACtBa,QAASA,EACTD,cA3JM,kBAAMS,GAAYR,OA+J5B,kBAACpQ,EAAA,EAAKI,OAAN,KACE,kBAACgR,GAAA,EAAQC,SAAT,CAAkB7Q,GAAIK,IAASR,MAAO,CAAE6K,SAAU,UAChD,kBAACkG,GAAA,EAAD,CACE5Q,GAAI8Q,KACJC,UAAU,UACV9Q,KAAK,UACL0O,UAAQ,EACRqC,UAAQ,EACRpB,QAASA,EACTjM,MAAM,OACNsN,UAAU,QACVpR,MAAO,CAAEqL,IAAK,KAEd,kBAAC4F,GAAA,EAAK1M,KAAN,CAAWpE,GAAG,IAAImB,QAhLd,kBAAMmP,GAAa,KAiLrB,kBAACnQ,EAAA,EAAD,CAAMC,KAAK,SADb,QAIA,kBAAC,GAAD,CAAW1B,MAAO2R,EAAWrR,WAnLxB,kBAAMsR,GAAa,MAoLxB,kBAACQ,GAAA,EAAK1M,KAAN,CAAWpE,GAAG,IAAImB,QAvLX,kBAAM8N,GAAgB,KAwL3B,kBAAC9O,EAAA,EAAD,CAAMC,KAAK,gBADb,WAIA,kBAAC,EAAD,CACE1B,MAAOsQ,EACPhQ,WA5LM,kBAAMiQ,GAAgB,MA8L9B,kBAAC6B,GAAA,EAAK1M,KAAN,CAAWpE,GAAG,IAAImB,QAAS4N,GACzB,kBAAC5O,EAAA,EAAD,CAAMC,KAAK,mBADb,SAIA,kBAAC,GAAD,CACE1B,MAAOmQ,EACP7P,WA9LU,kBAAM8P,GAAoB,MAgMtC,kBAACgC,GAAA,EAAK1M,KAAN,CACEpE,GAAG,IACHmB,QAAS,WACPrG,EACG2B,OACAiU,UACAtR,MAAK,WACJ7C,GAAW,GACXJ,EAAU,SAEXmD,OAAM,SAACC,GACN3C,QAAQC,IAAI0C,EAAK,mBAIvB,kBAACY,EAAA,EAAD,CAAMC,KAAK,aAfb,WAoBF,kBAACwQ,GAAA,EAAQM,OAAT,KACE,yBAAKrR,MAAO,CAAEiE,QAAS,QACrB,kBAACtE,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKI,OAAN,CAAaC,MAAO,CAAE8D,MAAO,OAAQzC,UAAW,KAC9C,6BAAMsL,KACN,kBAAC,EAAD,iB,UCrPX2E,GAbO,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,gCACvBxS,qBAAWtD,GAAvCM,EADmD,EACnDA,KADmD,EAC7CE,MAD6C,EACtCO,WAErB,OACE,kBAAC,IAAD,iBACM+U,EADN,CAEEC,OAAQ,SAACC,GAAD,OACN1V,EAAO,kBAACsV,EAAcI,GAAY,kBAAC,IAAD,CAAUzS,GAAI,iBCWzC0S,GAdH,WACV,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAeC,OAAK,EAACC,KAAK,IAAIN,UAAWlB,KACzC,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,UAAUN,UAAWjT,IACvC,kBAAC,IAAD,CAAOsT,OAAK,EAACC,KAAK,UAAUN,UAAWxP,Q,cCTjD+P,IAASL,OAAO,kBAAC,GAAD,MAASM,SAASC,eAAe,W","file":"static/js/main.7d2224f6.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDdhZHDHfXE9e1xbgqUfCoerVSsGmgbZPI\",\n  authDomain: \"ring-6c2f7.firebaseapp.com\",\n  databaseURL: \"https://ring-6c2f7.firebaseio.com\",\n  projectId: \"ring-6c2f7\",\n  storageBucket: \"ring-6c2f7.appspot.com\",\n  messagingSenderId: \"1010354351680\",\n  appId: \"1:1010354351680:web:c0aeb9c7bb7a87187d39a5\",\n  measurementId: \"G-YQBJYSPBJZ\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const storage = firebase.storage();\nexport default firebase;\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport firebase from \"./config/firebase\";\nimport { Redirect } from \"react-router-dom\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [users, setUsers] = useState(null);\n  const [groups, setGroups] = useState(null);\n  const [currentGroup, setCurrentGroup] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // 現在のログインユーザーの取得\n    firebase.auth().onAuthStateChanged((firebaseUser) => {\n      setUser(firebaseUser);\n      if (firebaseUser == null) {\n        setLoading(false);\n      }\n    });\n    // unmount\n    return () => {\n      console.log(\"unmount\");\n    };\n  }, []);\n\n  /** dbのuser情報を取得する関数 */\n  useLayoutEffect(() => {\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .onSnapshot((snapshot) => {\n        const userContent = snapshot.docs.map((doc) => {\n          return {\n            ...doc.data(),\n            id: doc.id,\n          };\n        });\n        setUsers(userContent);\n      });\n  }, []);\n\n  /** groupを取得する関数 */\n  // ログインユーザーがいるグループのみ取得\n  useLayoutEffect(() => {\n    if (user) {\n      firebase\n        .firestore()\n        .collection(\"groups\")\n        .where(\"users\", \"array-contains\", user.uid)\n        .onSnapshot((snapshot) => {\n          const groupContent = snapshot.docs.map((doc) => {\n            return {\n              ...doc.data(),\n              id: doc.id,\n            };\n          });\n          setCurrentGroup(groupContent[0].id);\n          setGroups(groupContent);\n        });\n    }\n  }, [user]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        groups,\n        setGroups,\n        users,\n        currentGroup,\n        setCurrentGroup,\n        loading,\n        setLoading,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\n\nconst Spinner = () => (\n  <Dimmer active>\n    <Loader size=\"huge\" content={\"準備中です\"} />\n  </Dimmer>\n);\n\nexport default Spinner;\n","import React, { useState, useContext } from \"react\";\nimport firebase from \"../config/firebase\";\nimport { AuthContext } from \"../AuthService\";\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../Spinner\";\n\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon,\n  Modal,\n  Input,\n} from \"semantic-ui-react\";\n\nconst SignIn = ({ history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [modal, setModal] = useState(false);\n  const [reset, setReset] = useState(\"\");\n  const { user, loading, setLoading } = useContext(AuthContext);\n\n  const onClickSubmit = (e) => {\n    setLoading(true);\n    e.preventDefault();\n    if (!email) {\n      alert(\"メールアドレスを入力してください\");\n    }\n    if (!password) {\n      alert(\"パスワードを入力してください\");\n    }\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        history.push(\"/\");\n        console.log(\"ログイン成功\");\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err, \"signin\");\n      });\n  };\n\n  if (user) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const openModal = () => setModal(true);\n  const closeModal = () => setModal(false);\n\n  const resetPassword = (value) => {\n    const auth = firebase.auth();\n    const emailAddress = value;\n\n    auth\n      .sendPasswordResetEmail(emailAddress)\n      .then(() => {\n        alert(\"メールを送信しました！そちらから変更してください！\");\n        console.log(\"パスワードリセット\");\n        closeModal();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n            <Grid.Column style={{ maxWidth: 450 }}>\n              <Header as=\"h2\" icon color=\"grey\" textAlign=\"center\">\n                <Icon name=\"lightbulb outline\" className=\"signIn__color\" />\n                ログイン\n              </Header>\n              <Form>\n                <Segment stacked>\n                  <Form.Input\n                    fluid\n                    type=\"email\"\n                    icon=\"mail\"\n                    iconPosition=\"left\"\n                    name=\"email\"\n                    placeholder=\"メールアドレス\"\n                    value={email}\n                    onChange={(e) => {\n                      setEmail(e.target.value);\n                    }}\n                  />\n                  <Form.Input\n                    fluid\n                    type=\"password\"\n                    icon=\"lock open\"\n                    iconPosition=\"left\"\n                    name=\"password\"\n                    placeholder=\"パスワード\"\n                    value={password}\n                    onChange={(e) => {\n                      setPassword(e.target.value);\n                    }}\n                  />\n                  <Button\n                    basic\n                    variant=\"contained\"\n                    size=\"medium\"\n                    style={{ marginTop: 10 }}\n                    onClick={onClickSubmit}\n                  >\n                    ログイン\n                  </Button>\n                </Segment>\n              </Form>\n              <Message>\n                新規登録は\n                <Link to=\"/signup\">こちら</Link>\n              </Message>\n              <Message>\n                パスワードをお忘れの方は\n                <span onClick={openModal} style={{ color: \"#4183c4\" }}>\n                  こちら\n                </span>\n              </Message>\n            </Grid.Column>\n          </Grid>\n          <Modal open={modal} onClose={closeModal}>\n            <Modal.Header>パスワード再設定</Modal.Header>\n            <Modal.Content>\n              <Form\n                onSubmit={() => {\n                  resetPassword(reset);\n                }}\n              >\n                <label>アドレスを入力</label>\n                <Input\n                  type=\"email\"\n                  value={reset}\n                  onChange={(e) => {\n                    setReset(e.target.value);\n                  }}\n                />\n                <Button\n                  onClick={() => {\n                    resetPassword(reset);\n                  }}\n                >\n                  送信\n                </Button>\n                <Button onClick={closeModal}>キャンセル</Button>\n              </Form>\n            </Modal.Content>\n          </Modal>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default SignIn;\n","import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"../config/firebase\";\nimport { AuthContext } from \"../AuthService\";\n\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Icon,\n  Message,\n} from \"semantic-ui-react\";\n\nconst SignUp = ({ history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n\n  const { users } = useContext(AuthContext);\n\n  const db = firebase.firestore();\n\n  const onClickSubmit = (e) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"パスワードが一致しません。もう一度お試し下さい。\");\n      return;\n    }\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => {\n        const user = firebase.auth().currentUser;\n\n        user\n          .updateProfile({\n            displayName: userName,\n            photoURL:\n              \"https://firebasestorage.googleapis.com/v0/b/ring-6c2f7.appspot.com/o/avatar%2Fanimal_chara_bad4_neko.png?alt=media&token=783201be-929d-44f4-8841-78d2d4d40733\",\n          })\n          .then(() => {\n            // firestoreにuser情報を追加\n            db.collection(\"users\").doc(user.uid).set({\n              name: user.displayName,\n              avatar: user.photoURL,\n              id: user.uid,\n              birth: \"\",\n            });\n\n            // デフォルトグループ作成\n            db.collection(\"groups\")\n              .doc()\n              .set({\n                groupName: \"ホーム\",\n                owner: user.uid,\n                users: firebase.firestore.FieldValue.arrayUnion(user.uid),\n                createdAt: new Date(),\n              });\n\n            history.push(\"/\");\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      });\n  };\n  return (\n    <>\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          {/* <input type=\"file\" onChange={choiceAvatar} />\n          <button onClick={prevAvatar}>画像</button> */}\n          <Header as=\"h2\" icon color=\"grey\" textAlign=\"center\">\n            <Icon name=\"chess queen\" className=\"signUp__color\" size=\"mini\" />\n            新規登録\n          </Header>\n          <Form onSubmit={onClickSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                type=\"text\"\n                name=\"userName\"\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"ユーザー名\"\n                value={userName}\n                onChange={(e) => {\n                  setUserName(e.target.value);\n                }}\n              />\n              <Form.Input\n                fluid\n                type=\"email\"\n                name=\"email\"\n                icon=\"mail\"\n                iconPosition=\"left\"\n                placeholder=\"メールアドアレス\"\n                value={email}\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n              />\n              <Form.Input\n                fluid\n                type=\"password\"\n                name=\"password\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"パスワード\"\n                value={password}\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n              />\n              <Form.Input\n                fluid\n                type=\"password\"\n                name=\"confirmPassword\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"パスワード確認用\"\n                value={confirmPassword}\n                onChange={(e) => {\n                  setConfirmPassword(e.target.value);\n                }}\n              />\n              <Button basic fluid size=\"large\">\n                アカウントを登録する\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            アカウント登録済みの方は <Link to=\"/signin\">こちら</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n};\n\nexport default SignUp;\n","import React, { useEffect, useContext } from \"react\";\nimport { AuthContext } from \"../AuthService\";\nimport firebase from \"../config/firebase\";\n\nimport { Button, Input, Grid } from \"semantic-ui-react\";\n\nconst Form = ({ value, setValue, allCheckBox, todos, setTodos }) => {\n  const { currentGroup, user } = useContext(AuthContext);\n  // 追加\n  const onButtonClick = (e) => {\n    e.preventDefault();\n    if (value === \"\") {\n      return;\n    }\n    todoData();\n    setValue(\"\");\n  };\n\n  // 全選択\n  const allSelectButton = (e) => {\n    e.preventDefault();\n    allCheckBox();\n  };\n\n  // firebase\n  const db = firebase.firestore();\n\n  /**firestoreにtodoデータを追加*/\n  const todoData = () => {\n    db.collection(\"todos\")\n      .doc()\n      .set({\n        content: value,\n        isDone: false,\n        createdBy: user.uid,\n        // groupId: db.doc(`groups/${currentGroup}`),\n      })\n      .then(() => {\n        console.log(\"todo データ追加成功\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // firebaseに追加した値を取得\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection(\"todos\")\n      .orderBy(\"content\")\n      .onSnapshot((snapshot) => {\n        const todo = snapshot.docs.map((doc) => {\n          return {\n            ...doc.data(),\n            id: doc.id,\n          };\n        });\n        setTodos(todo);\n      });\n  }, []);\n\n  const deleteTodo = () => {\n    todos\n      // isDoneがtrueだったら\n      .filter(({ isDone }) => isDone)\n      // idを探して削除\n      .forEach(({ id }) => {\n        db.collection(\"todos\")\n          .doc(id)\n          .delete()\n          .then(() => console.log(\"todo削除\"))\n          .catch((err) => console.log(err));\n      });\n  };\n\n  return (\n    <>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      />\n      <br />\n      <br />\n      <Grid style={{ width: \"240px\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            width: \"100%\",\n            padding: 0,\n            margin: \"10px 16px\",\n          }}\n        >\n          <div>\n            <Button\n              basic\n              circular\n              icon=\"trash alternate outline\"\n              onClick={deleteTodo}\n            />\n          </div>\n          <div>\n            <Button basic circular icon=\"check\" onClick={allSelectButton} />\n          </div>\n          <div>\n            <Button basic circular icon=\"edit\" onClick={onButtonClick} />\n          </div>\n        </div>\n      </Grid>\n    </>\n  );\n};\n\nexport default Form;\n","import React, { useContext } from \"react\";\nimport { AuthContext } from \"../AuthService\";\n\nimport { Checkbox, List } from \"semantic-ui-react\";\n\nconst Item = ({ value, todos, setTodos, isDone, id, userId }) => {\n  const { user } = useContext(AuthContext);\n\n  const onClickSelect = (e) => {\n    const checkedTodos = todos.map((todo) => {\n      if (e.target.id === todo.id) {\n        return { ...todo, isDone: !todo.isDone };\n      } else {\n        return todo;\n      }\n    });\n    setTodos(checkedTodos);\n  };\n\n  return (\n    <>\n      {user && (\n        <>\n          {user.uid === userId && (\n            <>\n              <div style={{ fontSize: \"18px\", marginTop: \"20px\" }}>\n                <Checkbox\n                  color=\"blue\"\n                  checked={isDone}\n                  id={id}\n                  onClick={onClickSelect}\n                  style={{ margin: \"0 10px\" }}\n                />\n                <span\n                  style={{\n                    textDecoration: isDone ? \"line-through\" : \"none\",\n                  }}\n                >\n                  {value}\n                </span>\n              </div>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Item;\n","import React from \"react\";\nimport Item from \"./Item\";\n\nconst List = ({ todos, setTodos }) => {\n  return (\n    <ul style={{ listStyle: \"none\", padding: 0, width: 200, margin: 16 }}>\n      {todos.map((todo) => {\n        return (\n          <>\n            <Item\n              value={todo.content}\n              id={todo.id}\n              key={todo.id}\n              todos={todos}\n              setTodos={setTodos}\n              isDone={todo.isDone}\n              userId={todo.createdBy}\n            />\n          </>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default List;\n","import React, { useState } from \"react\";\nimport Form from \"./Form\";\nimport List from \"./List\";\n\nconst TodoApp = () => {\n  const [todos, setTodos] = useState([]);\n  const [value, setValue] = useState(\"\");\n\n  // 全選択\n  const allCheckBox = () => {\n    const allSelect = todos.map((todo) => {\n      return { ...todo, isDone: !todo.isDone };\n    });\n    setTodos(allSelect);\n  };\n\n  return (\n    <div>\n      <div>\n        <h1>TodoList</h1>\n        <Form\n          value={value}\n          setValue={setValue}\n          setTodos={setTodos}\n          todos={todos}\n          setTodos={setTodos}\n          allCheckBox={allCheckBox}\n        />\n        <List todos={todos} setTodos={setTodos} value={value} />\n      </div>\n    </div>\n  );\n};\n\nexport default TodoApp;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport firebase, { storage } from \"../config/firebase\";\nimport { AuthContext } from \"../AuthService\";\n\nimport {\n  Modal,\n  Segment,\n  Input,\n  Button,\n  Form,\n  Image,\n  TextArea,\n  List,\n} from \"semantic-ui-react\";\n\nconst TweetForm = ({\n  text,\n  setText,\n  setTweets,\n  setEmojiType,\n  emojiType,\n  images,\n  setImages,\n  imageUrl,\n  setImageUrl,\n  upload,\n  setUpload,\n}) => {\n  const { user, users, currentGroup } = useContext(AuthContext);\n\n  // firebase\n  const db = firebase.firestore();\n\n  /** firebaseに追加した値を取得 */\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection(\"chat\")\n      // 昇順\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot(async (snapshot) => {\n        const message = await Promise.all(\n          snapshot.docs.map(async (doc) => {\n            const userRef = await doc.data().createUser;\n            return {\n              ...doc.data(),\n              id: doc.id,\n              createdAt: doc.data().createdAt.toDate().toString(),\n              createUser: userRef,\n            };\n          })\n        );\n        setTweets(message);\n      });\n  }, []);\n\n  /** アバター取得 */\n  const displayAvatar = () => {\n    if (users && user) {\n      const avatar = users.find((pick) => pick.id === user.uid);\n      return avatar.avatar;\n    }\n  };\n\n  // firebaseにデータを追加\n  const data = () => {\n    const userRef = db.collection(\"users\").doc(user.uid);\n    db.collection(\"chat\").doc().set({\n      // タイムスタンプ\n      createdAt: new Date(),\n      content: text,\n      image: imageUrl,\n      groupId: currentGroup,\n      createUser: userRef,\n    });\n  };\n\n  // ツイート追加\n  const onClickTweet = (e) => {\n    e.preventDefault();\n    if (text.trim() === \"\" && upload === false) {\n      alert(\"メッセージを入力してください\");\n    } else if (text.length > 140) {\n      alert(\"メッセージは140文字以内で入力してください\");\n    } else {\n      data();\n    }\n    setText(\"\");\n    setUpload(false);\n    setImageUrl(\"\");\n  };\n\n  // ダイアログ\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  // 絵文字\n  const onClickEmoji = () => {\n    // クリック時に一覧が開かれていたら閉じる\n    if (emojiType) {\n      setEmojiType(null);\n      // クリック時に一覧が閉じていたら開く\n    } else {\n      setEmojiType(\"emoji\");\n    }\n  };\n\n  /** 画像アップロード */\n  const handleImage = (e) => {\n    const image = e.target.files[0];\n    setImages(image);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (images === \"\") {\n      alert(\"ファイルが選択されていません\");\n      return;\n    }\n\n    setUpload(true);\n    setOpen(false);\n    // アップロード処理\n    const uploadTask = storage.ref(`/images/${images.name}`).put(images);\n    uploadTask.on(\n      firebase.storage.TaskEvent.STATE_CHANGED,\n      next,\n      error,\n      complete\n    );\n  };\n\n  const next = (snapshot) => {\n    // 進行中のsnapshotを得る\n    // アップロードの進行度を表示\n    const percent = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n    console.log(percent + \"% done\");\n    console.log(snapshot);\n  };\n\n  // エラーハンドリング\n  const error = (err) => console.log(err);\n\n  const complete = () => {\n    // 完了後の処理\n    // 画像表示のため、アップロードした画像のURLを取得\n    storage\n      .ref(\"images\")\n      .child(images.name)\n      .getDownloadURL()\n      .then((fireBaseUrl) => {\n        setImageUrl(fireBaseUrl);\n      });\n  };\n\n  const preview = () => {\n    return (\n      <>\n        <Button\n          circular\n          basic\n          icon=\"times\"\n          size=\"mini\"\n          color=\"gray\"\n          onClick={prevDelete}\n        />\n        <Image size=\"small\" src={imageUrl} alt=\"uploaded\" />\n      </>\n    );\n  };\n\n  const prevDelete = () => {\n    setUpload(false);\n    // firebase画像消し方\n    const desertRef = storage.ref(`/images/${images.name}`);\n    desertRef.delete();\n  };\n\n  return (\n    <>\n      <Segment>\n        <List>\n          <List.Item>\n            <Image avatar src={displayAvatar()} size=\"tiny\" />\n            <List.Content>\n              <Form>\n                <TextArea\n                  placeholder=\"140文字以内でメッセージを入力してください\"\n                  maxLength=\"140\"\n                  style={{ resize: \"none\", border: \"none\" }}\n                  fluid\n                  transparent\n                  focus\n                  type=\"text\"\n                  value={text}\n                  onChange={(e) => setText(e.target.value)}\n                />\n                {upload ? preview() : null}\n              </Form>\n            </List.Content>\n          </List.Item>\n        </List>\n\n        <br />\n        <div className=\"form__btn\">\n          <Button\n            basic\n            circular\n            icon=\"camera\"\n            iconPosition=\"right\"\n            size=\"medium\"\n            onClick={handleOpen}\n          />\n\n          <Button\n            basic\n            circular\n            icon=\"smile outline\"\n            iconPosition=\"right\"\n            size=\"medium\"\n            onClick={onClickEmoji}\n          />\n          <Button\n            basic\n            circular\n            icon=\"paper plane outline\"\n            iconPosition=\"right\"\n            size=\"medium\"\n            onClick={onClickTweet}\n          >\n            つぶやく\n          </Button>\n        </div>\n      </Segment>\n\n      <Modal open={open} onClose={handleClose}>\n        <Modal.Header>{\"写真をアップロード\"}</Modal.Header>\n        <Modal.Content>\n          ファイルを選択から画像を選択して決定を押してください\n          <Form onSubmit={onSubmit}>\n            <Input type=\"file\" onChange={handleImage} className=\"input__file\" />\n            <Button basic color=\"red\" onClick={handleClose}>\n              戻る\n            </Button>\n            <Button basic color=\"green\" onClick={onSubmit}>\n              決定\n            </Button>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n};\n\nexport default TweetForm;\n","import React, { useContext, useEffect } from \"react\";\nimport firebase, { storage } from \"../config/firebase\";\nimport moment from \"moment\";\nimport { AuthContext } from \"../AuthService\";\n\nimport { Button, List, Segment, Grid, Image } from \"semantic-ui-react\";\n\nconst TweetItem = ({ imageUrl, id, content, time, groupId }) => {\n  const { user, users, currentGroup } = useContext(AuthContext);\n  const db = firebase.firestore();\n\n  const image = () => {\n    return <Image centered src={imageUrl} alt=\"uploadImage\" size=\"small\" />;\n  };\n\n  const deleteData = (id) => {\n    db.collection(\"chat\")\n      .doc(id)\n      .get()\n      .then((res) => {\n        res.ref.delete();\n      })\n      .catch((err) => console.log(err));\n\n    if (imageUrl) {\n      storage.refFromURL(imageUrl).delete();\n    }\n  };\n\n  const timeFromNow = (timestamp) => moment(timestamp).fromNow();\n\n  /** アバター取得 */\n  const displayAvatar = () => {\n    if (users && user) {\n      const avatar = users.find((pick) => pick.id === user.uid);\n      return avatar.avatar;\n    }\n  };\n\n  /** ユーザーネーム取得 */\n  const displayName = () => {\n    if (users && user) {\n      const name = users.find((pick) => pick.id === user.uid);\n      return name.name;\n    }\n  };\n\n  return (\n    <>\n      {currentGroup === groupId ? (\n        <Segment className=\"tweet__list\">\n          <Grid>\n            <Grid.Row stretched>\n              <List\n                divided\n                relaxed\n                size=\"big\"\n                style={{ textDecoration: \"none\" }}\n              >\n                <List.Item className=\"tweet__item\">\n                  <Image avatar src={displayAvatar()} size=\"tiny\" circular />\n                  <List.Content>\n                    <div style={{ display: \"flex\" }}>\n                      <div>{displayName()}</div>\n                      <List.Description\n                        style={{\n                          color: \"grey\",\n                          marginLeft: \"20px\",\n                        }}\n                      >\n                        <div>{timeFromNow(time)}</div>\n                      </List.Description>\n                    </div>\n                    <div style={{ marginTop: 20, fontSize: 18 }}>{content}</div>\n                  </List.Content>\n                  <div>{imageUrl ? image() : null}</div>\n                  <Button\n                    circular\n                    basic\n                    icon=\"times\"\n                    size=\"mini\"\n                    color=\"gray\"\n                    className=\"tweet__delete\"\n                    onClick={() => {\n                      deleteData(id);\n                    }}\n                  />\n                </List.Item>\n              </List>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      ) : null}\n    </>\n  );\n};\n\nexport default TweetItem;\n","import React from \"react\";\nimport TweetItem from \"./TweetItem\";\n\nconst TweetList = ({ tweets, setTweets }) => {\n  return (\n    <>\n      {tweets.map((tweet) => {\n        return (\n          <TweetItem\n            content={tweet.content}\n            imageUrl={tweet.image}\n            id={tweet.id}\n            groupId={tweet.groupId}\n            setTweets={setTweets}\n            time={tweet.createdAt}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default TweetList;\n","import React, { useState, useContext } from \"react\";\nimport TweetForm from \"./TweetForm\";\nimport TweetList from \"./TweetList\";\nimport { AuthContext } from \"../AuthService\";\n\n// 絵文字\nimport { Picker } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\n\nconst ChatApp = () => {\n  // ツイート管理\n  const [text, setText] = useState(\"\");\n  const [tweets, setTweets] = useState([]);\n\n  // 画像\n  const [images, setImages] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [upload, setUpload] = useState(false);\n\n  // 絵文字\n  const [emojiType, setEmojiType] = useState(null);\n\n  const { currentGroup } = useContext(AuthContext);\n\n  const onEmojiSelect = (emoji) => {\n    // 絵文字一覧の開閉\n    setEmojiType(!emojiType);\n    // 絵文字を表示させるようにする\n    setText(text + emoji.native);\n  };\n\n  return (\n    <>\n      <TweetForm\n        text={text}\n        setText={setText}\n        tweets={tweets}\n        setTweets={setTweets}\n        setEmojiType={setEmojiType}\n        emojiType={emojiType}\n        images={images}\n        setImages={setImages}\n        imageUrl={imageUrl}\n        setImageUrl={setImageUrl}\n        upload={upload}\n        setUpload={setUpload}\n      />\n      {emojiType && (\n        <Picker\n          onClick={(emoji) => onEmojiSelect({ ...emoji, emojiType })}\n          i18n={{\n            search: \"検索\",\n            categories: {\n              search: \"検索結果\",\n              recent: \"よく使う絵文字\",\n              people: \"顔 & 人\",\n              nature: \"動物 & 自然\",\n              foods: \"食べ物 & 飲み物\",\n              activity: \"アクティビティ\",\n              places: \"旅行 & 場所\",\n              objects: \"オブジェクト\",\n              symbols: \"記号\",\n              flags: \"旗\",\n              custom: \"カスタム\",\n            },\n          }}\n          style={{\n            position: \"absolute\",\n            zIndex: \"20\",\n          }}\n          native\n        />\n      )}\n      <TweetList tweets={tweets} setTweets={setTweets} imageUrl={imageUrl} />\n    </>\n  );\n};\n\nexport default ChatApp;\n","import React, { useState } from \"react\";\nimport { Button, Grid, Header, Segment, Portal } from \"semantic-ui-react\";\n\nexport const AlertModal = ({ title, text, open, close }) => {\n  return (\n    <Grid columns={2}>\n      <Grid.Column>\n        <Portal onClose={close} open={open}>\n          <Segment\n            style={{\n              left: \"50%\",\n              position: \"fixed\",\n              top: \"50%\",\n              zIndex: 1000,\n            }}\n          >\n            <Header>{title}</Header>\n            <p>{text}</p>\n\n            <Button content=\"Close Portal\" negative onClick={close} />\n          </Segment>\n        </Portal>\n      </Grid.Column>\n    </Grid>\n  );\n};\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { AuthContext } from \"../AuthService\";\nimport firebase, { storage } from \"../config/firebase\";\nimport { AlertModal } from \"../atoms/AlertModal\";\n\nimport {\n  Button,\n  Modal,\n  Icon,\n  Image,\n  Form,\n  Input,\n  Grid,\n} from \"semantic-ui-react\";\n\nconst ProfileModal = ({ modal, closeModal }) => {\n  const [avatarImage, setAvatarImage] = useState(\"\");\n  const [avatarUrl, setAvatarUrl] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [birth, setBirth] = useState(\"\");\n  const [reset, setReset] = useState(\"\");\n  const [passwordModal, setPasswordModal] = useState(false);\n  const [upload, setUpload] = useState(false);\n  const [avatarCheck, setAvatarCheck] = useState(false);\n\n  const [alertOpen, setAlertOpen] = useState(false);\n\n  const AlertOpen = () => setAlertOpen(true);\n  const AlertClose = () => setAlertOpen(false);\n\n  const { users, user } = useContext(AuthContext);\n  const db = firebase.firestore();\n\n  const openPasswordModal = () => setPasswordModal(true);\n  const closePasswordModal = () => setPasswordModal(false);\n\n  const handlePreview = (e) => {\n    const file = e.target.files[0];\n    setAvatarImage(file);\n  };\n\n  // プロフィール\n  const onBtnClick = () => {\n    // 何も変更なければ閉じる\n    if (!name && !avatarCheck) {\n      alert(\"何も変更されてません\");\n      return;\n    }\n    // firestoreの更新\n    if (name) {\n      db.collection(\"users\")\n        .doc(user.uid)\n        .update({\n          name,\n        })\n        .then(() => {\n          closeModal();\n        })\n        .catch((err) => console.log(err));\n    }\n\n    if (avatarImage) {\n      // firestoreの更新\n      db.collection(\"users\")\n        .doc(user.uid)\n        .update({\n          avatar: avatarUrl,\n        })\n        .then(() => {\n          closeModal();\n          setAvatarCheck(false);\n          setAvatarImage(\"\");\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  // パスワードリセット\n  const onPasswordClick = (value) => {\n    if (!value) {\n      alert(\"パスワード変更の方 : メールアドレスが入力されていません\");\n    }\n    const auth = firebase.auth();\n    const emailAddress = value;\n\n    auth\n      .sendPasswordResetEmail(emailAddress)\n      .then(() => {\n        closePasswordModal();\n        setReset(\"\");\n      })\n      .catch((err) => console.log(err));\n    closePasswordModal();\n  };\n\n  // アドレス変更\n  const ChangeAddress = (email, password) => {\n    const information = firebase.auth().currentUser;\n\n    if (!email) {\n      alert(\"メールアドレスを入力してください\");\n    } else if (!password) {\n      alert(\"パスワードを入力してください\");\n    } else {\n      const credential = firebase\n        .auth()\n        // 既存のユーザーをログインさせる\n        .signInWithEmailAndPassword(email, password);\n\n      information\n        .updateEmail(email)\n        .then(() => {\n          setEmail(\"\");\n          setPassword(\"\");\n          closeModal();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  // 画像アップロード\n  const prevAvatar = () => {\n    if (avatarImage === \"\") {\n      alert(\"ファイルを選択されていません\");\n      return;\n    }\n    setUpload(true);\n    setAvatarCheck(true);\n    // アバターアップロード\n    const uploadTask = storage\n      .ref(`/icons/${avatarImage.name}`)\n      .put(avatarImage);\n    uploadTask.on(\n      firebase.storage.TaskEvent.STATE_CHANGED,\n      next,\n      error,\n      complete\n    );\n  };\n\n  const next = (snapshot) => {\n    // 進行中のsnapshotを得る\n    // アップロードの進行度を表示\n    const percent = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n    console.log(percent + \"% done\");\n  };\n\n  // エラーハンドリング\n  const error = (err) => console.log(err);\n\n  // useEffect?\n  const complete = () => {\n    // 完了後の処理\n    // 画像表示のため、アップロードした画像のURLを取得\n    storage\n      .ref(\"icons\")\n      .child(avatarImage.name)\n      .getDownloadURL()\n      .then((fireBaseUrl) => {\n        setAvatarUrl(fireBaseUrl);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const pullName = () => {\n    if (user && users) {\n      const conf = users.find((usersName) => user.uid === usersName.id);\n      return conf.name;\n    }\n  };\n\n  const imageAvatar = () => {\n    if (users && user) {\n      const conf = users.find((pullImage) => pullImage.id === user.uid);\n      return conf.avatar;\n    }\n  };\n\n  const checkPrev = () => {\n    if (upload) {\n      return (\n        <Image\n          src={avatarUrl}\n          height={120}\n          width={120}\n          size=\"small\"\n          circular\n          style={{ margin: \"0 auto\" }}\n        />\n      );\n    } else {\n      return (\n        <>\n          {imageAvatar() ? (\n            <Image\n              src={users && imageAvatar()}\n              height={120}\n              width={120}\n              size=\"small\"\n              circular\n              style={{ margin: \"0 auto\" }}\n            />\n          ) : (\n            <Image\n              src={user ? user.photoURL : null}\n              height={120}\n              width={120}\n              size=\"small\"\n              circular\n              style={{ margin: \"0 auto\" }}\n            />\n          )}\n        </>\n      );\n    }\n  };\n\n  return (\n    <>\n      <Modal open={modal} onClose={closeModal}>\n        <Modal.Header>プロフィール</Modal.Header>\n        <Modal.Content>\n          {checkPrev()}\n          <div\n            style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}\n          >\n            <Button\n              onClick={prevAvatar}\n              basic\n              style={{ width: \"70%\", margin: \"0 auto\" }}\n            >\n              アバタープレビュー\n            </Button>\n          </div>\n          <Form>\n            <Form.Field>\n              <label>アバターの変更</label>\n              <Input type=\"file\" onChange={handlePreview} />\n            </Form.Field>\n            <Form.Field>\n              <label>名前の変更</label>\n              <Input\n                type=\"text\"\n                value={name}\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                placeholder={user ? pullName() : \"\"}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions style={{ width: \"100%\" }}>\n          <Button onClick={openPasswordModal} basic color=\"blue\">\n            <Icon name=\"key\" />\n            パスワード変更\n          </Button>\n          <Button onClick={closeModal} basic color=\"red\">\n            <Icon name=\"remove\" />\n            キャンセル\n          </Button>\n          <Button basic color=\"green\" onClick={onBtnClick}>\n            <Icon name=\"checkmark\" />\n            保存\n          </Button>\n        </Modal.Actions>\n      </Modal>\n\n      <Modal open={passwordModal} onClose={closePasswordModal}>\n        <Modal.Header style={{ width: \"100%\", display: \"flex\" }}>\n          <span>メールアドレスorパスワード再設定</span>\n        </Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label>メールアドレスの変更</label>\n              <Input\n                value={email}\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n                type=\"mail\"\n                placeholder={user ? user.email : \"\"}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>\n                ※メールアドレスを変更する場合はパスワードを入力してください\n              </label>\n              <Input\n                value={password}\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n                type=\"password\"\n              />\n            </Form.Field>\n            <Button\n              basic\n              color=\"green\"\n              onClick={() => {\n                ChangeAddress(email, password);\n              }}\n            >\n              送信\n            </Button>\n          </Form>\n        </Modal.Content>\n        <Modal.Content>\n          <Form\n            onSubmit={() => {\n              onPasswordClick(reset);\n            }}\n          >\n            <Form.Field>\n              <label>パスワード変更の方はアドレスを入力してください</label>\n              <Input\n                type=\"email\"\n                value={reset}\n                onChange={(e) => {\n                  setReset(e.target.value);\n                }}\n              />\n            </Form.Field>\n            <Button\n              basic\n              color=\"green\"\n              onClick={() => {\n                onPasswordClick(reset);\n              }}\n            >\n              送信\n            </Button>\n            <Button\n              basic\n              color=\"red\"\n              style={{ float: \"right\" }}\n              onClick={closePasswordModal}\n            >\n              戻る\n            </Button>\n          </Form>\n        </Modal.Content>\n      </Modal>\n      <AlertModal\n        open={alertOpen}\n        close={AlertClose}\n        title=\"確認\"\n        text=\"何も変更されてませんがよろしいですか？\"\n      />\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import React, { useState, useContext } from \"react\";\nimport { AuthContext } from \"../AuthService\";\nimport firebase from \"../config/firebase\";\nimport { Button, Modal, Icon, Form, Input } from \"semantic-ui-react\";\n\nconst MemberPlusModal = ({ modal, closeModal, groupId }) => {\n  const { user, groups } = useContext(AuthContext);\n  const [addUserId, setAddUserId] = useState(\"\");\n  const [idOpen, setIdOpen] = useState(false);\n\n  const groupName = () => {\n    if (groups) {\n      const groupDetail = groups.find((group) => group.id === groupId);\n      return groupDetail.groupName;\n    }\n  };\n\n  const groupIdGet = () => {\n    if (groups) {\n      const groupDetail = groups.find((group) => group.id === groupId);\n      return groupDetail.id;\n    }\n  };\n\n  const memberPlus = (id) => {\n    firebase\n      .firestore()\n      .collection(\"groups\")\n      .doc(groupIdGet())\n      .update({\n        // 配列にメンバーを追加\n        users: firebase.firestore.FieldValue.arrayUnion(id),\n      });\n    setAddUserId(\"\");\n    closeModal();\n  };\n\n  return (\n    <>\n      <Modal size=\"small\" open={modal} onClose={closeModal}>\n        <Modal.Header>メンバーを追加</Modal.Header>\n        <Modal.Content>\n          <div>追加したいメンバーのIDを入力して下さい</div>\n          <div>選択グループ</div>\n          <Icon name=\"angle right\" />\n          {groupName()}\n          <Form>\n            <Input\n              type=\"text\"\n              value={addUserId}\n              onChange={(e) => {\n                setAddUserId(e.target.value);\n              }}\n            />\n            <Button\n              onClick={() => {\n                memberPlus(addUserId);\n              }}\n            >\n              追加\n            </Button>\n          </Form>\n          <Form>\n            <Button\n              basic\n              onClick={() => {\n                setIdOpen(!idOpen);\n              }}\n            >\n              ユーザーID表示\n            </Button>\n            {idOpen && <span>{user.uid}</span>}\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color=\"red\" onClick={closeModal}>\n            <Icon name=\"remove\" />\n            キャンセル\n          </Button>\n          <Button basic color=\"green\">\n            <Icon name=\"checkmark\" />\n            保存\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    </>\n  );\n};\n\nexport default MemberPlusModal;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { AuthContext } from \"../AuthService\";\nimport firebase from \"firebase\";\nimport MemberPlusModal from \"./MemberPlusModal\";\n\nimport {\n  Button,\n  Modal,\n  Icon,\n  Form,\n  Input,\n  Checkbox,\n  Responsive,\n} from \"semantic-ui-react\";\n\nconst GroupConfigModal = ({ modal, closeModal }) => {\n  const { groups, setCurrentGroup } = useContext(AuthContext);\n  const [name, setName] = useState(\"\");\n  const [updateGroupId, setUpdateGroupId] = useState(null);\n  const [modalMemberPlus, setModalMemberPlus] = useState(false);\n\n  const db = firebase.firestore();\n\n  const openMemberPlusModal = () => setModalMemberPlus(true);\n  const closeMemberPlusModal = () => setModalMemberPlus(false);\n\n  /** input入力したらグループ名が変わるようにしたい */\n  const onBtnClick = () => {\n    if (!name) {\n      alert(\"グループ名を入力して下さい！\");\n      return;\n    }\n    db.collection(\"groups\")\n      .doc(updateGroupId)\n      .get()\n      .then((details) => {\n        // ref = DocumentReference\n        details.ref.update({\n          groupName: name,\n        });\n      });\n    setName(\"\");\n    closeModal();\n  };\n\n  useEffect(() => {\n    if (!groups) {\n      return;\n    }\n    setUpdateGroupId(groups[0].id);\n  }, [groups]);\n\n  /** チェックボックス付きのグループ名表示 */\n  const chooseGroup = () => {\n    if (!groups) {\n      return;\n    }\n    return groups.map((group) => {\n      const checkId = group.id === updateGroupId;\n      return (\n        <Form.Field>\n          <Checkbox\n            radio\n            checked={checkId}\n            id={group.id}\n            onClick={(e) => {\n              setUpdateGroupId(e.target.id);\n            }}\n            style={{ marginRight: \"10px\" }}\n          />\n          {group.groupName}\n        </Form.Field>\n      );\n    });\n  };\n\n  return (\n    <>\n      <Modal size=\"small\" open={modal} onClose={closeModal}>\n        <Modal.Header>グループ設定</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label>グループ選択</label>\n              {chooseGroup()}\n            </Form.Field>\n            <Form.Field>\n              <label>グループ名変更</label>\n              <Input\n                value={name}\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n              />\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color=\"red\" onClick={closeModal}>\n            <Icon name=\"remove\" />\n            キャンセル\n          </Button>\n          <Button onClick={openMemberPlusModal} basic color=\"orange\">\n            <Icon name=\"users\" />\n            メンバーを招待\n          </Button>\n          <Button basic color=\"green\" onClick={onBtnClick}>\n            <Icon name=\"sync alternate\" />\n            変更\n          </Button>\n          <MemberPlusModal\n            modal={modalMemberPlus}\n            closeModal={closeMemberPlusModal}\n            groupId={updateGroupId}\n          />\n        </Modal.Actions>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupConfigModal;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport firebase from \"../config/firebase\";\nimport { AuthContext } from \"../AuthService\";\nimport GroupConfigModal from \"./GroupConfigModal.js\";\n\nimport { Button, Modal, Icon, Form, Input } from \"semantic-ui-react\";\n\nconst ChangeGroupModal = ({ modal, closeModal }) => {\n  const { groups, users, user, setCurrentGroup } = useContext(AuthContext);\n\n  const [groupName, setGroupName] = useState(\"\");\n  const [configModal, setConfigModal] = useState(false);\n\n  const openGroupConfigModal = () => setConfigModal(true);\n  const closeGroupConfigModal = () => setConfigModal(false);\n\n  const db = firebase.firestore();\n\n  /** グループ追加 */\n  const onFormSubmit = (groupName) => {\n    if (groupName === \"\") {\n      alert(\"グループ名を入力して下さい！\");\n    } else if (\n      groups.filter((group) => group.groupName === groupName).length > 1\n    ) {\n      alert(\"既に同じ名前のグループが存在します\");\n      return;\n    } else {\n      setGroupName(\"\");\n      addGroup();\n    }\n  };\n\n  /** グループ切り替える */\n  const changeGroup = (groupId) => {\n    setCurrentGroup(groupId);\n    closeModal();\n  };\n\n  /**firebaseへグループの追加*/\n  const addGroup = () => {\n    db.collection(\"groups\")\n      .doc()\n      .set({\n        groupName,\n        owner: user.uid,\n        users: firebase.firestore.FieldValue.arrayUnion(user.uid),\n        createdAt: new Date(),\n      });\n  };\n\n  /** グループ毎にボタンを増やす関数*/\n  const addBtn = () => {\n    if (groups && user && users) {\n      return groups.map((group) => {\n        const checkId = group.users.filter((u) => u === user.uid);\n        if (checkId.length > 0) {\n          return (\n            <Button\n              onClick={() => {\n                changeGroup(group.id);\n              }}\n              type=\"button\"\n              basic\n              color=\"blue\"\n            >\n              {group.groupName}\n            </Button>\n          );\n        }\n      });\n    }\n  };\n\n  return (\n    <>\n      <Modal open={modal} onClose={closeModal}>\n        <Modal.Header>グループ設定</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <Form.Field>\n              <label>グループ追加</label>\n              <Input\n                value={groupName}\n                onChange={(e) => {\n                  setGroupName(e.target.value);\n                }}\n                placeholder=\"グループ名\"\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>グループ切替</label>\n              {addBtn()}\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color=\"red\" onClick={closeModal}>\n            <Icon name=\"remove\" />\n            キャンセル\n          </Button>\n          <Button basic color=\"black\" onClick={openGroupConfigModal}>\n            <Icon name=\"setting\" onClick={openGroupConfigModal} />\n            設定\n          </Button>\n          <Button\n            basic\n            color=\"green\"\n            onClick={() => {\n              onFormSubmit(groupName);\n            }}\n          >\n            <Icon name=\"plus\" />\n            追加\n          </Button>\n        </Modal.Actions>\n      </Modal>\n      <GroupConfigModal\n        modal={configModal}\n        closeModal={closeGroupConfigModal}\n      />\n    </>\n  );\n};\n\nexport default ChangeGroupModal;\n","import React, { useState } from \"react\";\n\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { Button, Modal, Icon, Form } from \"semantic-ui-react\";\n\nexport const CalendarApp = () => {\n  const [value, onChange] = useState(new Date());\n\n  return (\n    <div className=\"Sample\">\n      <div className=\"Sample__container\">\n        <main className=\"Sample__container__content\">\n          <Calendar onChange={onChange} value={value} />\n        </main>\n        <Modal size=\"small\">\n          <Modal.Header>予定管理</Modal.Header>\n          <Modal.Content>\n            <Form>\n              <Form.Field>\n                <label>予定</label>\n              </Form.Field>\n            </Form>\n          </Modal.Content>\n          <Modal.Actions>\n            <Icon name=\"checkmark\" />\n            　追加\n            <Button color=\"red\" inverted>\n              <Icon name=\"remove\" />\n              　キャンセル\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useContext } from \"react\";\nimport ProfileModal from \"./modal/ProfileModal\";\nimport ChangeGroupModal from \"./modal/ChangeGroupModal\";\nimport { animateScroll as scroll } from \"react-scroll\";\nimport { CalendarApp } from \"./calendar_components/CalendarApp\";\nimport { Button, Grid, Icon, Responsive } from \"semantic-ui-react\";\n\nconst SideBar = ({\n  modalChangeGroup,\n  setModalChangeGroup,\n  openChangeGroupModal,\n  modalProfile,\n  setModalProfile,\n}) => {\n  // モーダル\n  const openProfileModal = () => setModalProfile(true);\n  const closeProfileModal = () => setModalProfile(false);\n  const closeChangeGroupModal = () => setModalChangeGroup(false);\n\n  const scrollToTop = () => {\n    scroll.scrollToTop();\n  };\n\n  return (\n    <>\n      <div>\n        {/* pc */}\n        <Responsive minWidth={1031}>\n          <Grid>\n            <Grid.Row>\n              <div\n                onClick={scrollToTop}\n                style={{\n                  fontSize: \"60px\",\n                  fontFamily: \"Pacifico,cursive\",\n                  width: \"100%\",\n                  textAlign: \"center\",\n                }}\n              >\n                rin<span style={{ color: \"red\" }}>G</span>\n              </div>\n            </Grid.Row>\n            <Grid.Row style={{ marginTop: 50 }}>\n              <div style={{ width: \"100%\", textAlign: \"center\" }}>\n                <Button\n                  circular\n                  color=\"blue\"\n                  size=\"big\"\n                  onClick={openProfileModal}\n                  inverted\n                >\n                  <Icon name=\"user circle\" /> プロフィール\n                </Button>\n                <ProfileModal\n                  modal={modalProfile}\n                  closeModal={closeProfileModal}\n                />\n              </div>\n            </Grid.Row>\n            <Grid.Row style={{ marginTop: 30 }}>\n              <div style={{ width: \"100%\", textAlign: \"center\" }}>\n                <Button\n                  circular\n                  size=\"big\"\n                  color=\"orange\"\n                  onClick={openChangeGroupModal}\n                  inverted\n                >\n                  <Icon name=\"sync alternate\" />\n                  グループ設定\n                </Button>\n                <ChangeGroupModal\n                  modal={modalChangeGroup}\n                  closeModal={closeChangeGroupModal}\n                />\n              </div>\n            </Grid.Row>\n            <Grid.Row style={{ marginTop: 50, left: 30 }}>\n              <CalendarApp />\n            </Grid.Row>\n          </Grid>\n        </Responsive>\n\n        {/* tab */}\n        <Responsive maxWidth={1030}>\n          <Grid>\n            <Grid.Row style={{ marginTop: 20 }}>\n              <div\n                onClick={scrollToTop}\n                style={{\n                  fontSize: \"60px\",\n                  fontFamily: \"Pacifico,cursive\",\n                  width: \"100%\",\n                  textAlign: \"center\",\n                }}\n              >\n                rin<span style={{ color: \"red\" }}>G</span>\n              </div>\n            </Grid.Row>\n            <Grid.Row style={{ marginTop: 50 }}>\n              <div style={{ width: \"100%\" }}>\n                <Button\n                  circular\n                  color=\"blue\"\n                  size=\"big\"\n                  onClick={openProfileModal}\n                  inverted\n                >\n                  <Icon name=\"user circle\" /> プロフィール\n                </Button>\n                <ProfileModal\n                  modal={modalProfile}\n                  closeModal={closeProfileModal}\n                />\n              </div>\n            </Grid.Row>\n            <Grid.Row style={{ marginTop: 30 }}>\n              <div style={{ width: \"100%\" }}>\n                <Button\n                  circular\n                  size=\"big\"\n                  color=\"orange\"\n                  onClick={openChangeGroupModal}\n                  inverted\n                >\n                  <Icon name=\"sync alternate\" />\n                  グループ設定\n                </Button>\n                <ChangeGroupModal\n                  modal={modalChangeGroup}\n                  closeModal={closeChangeGroupModal}\n                />\n              </div>\n            </Grid.Row>\n            <Grid.Row style={{ marginTop: 50 }}>\n              <CalendarApp />\n            </Grid.Row>\n          </Grid>\n        </Responsive>\n      </div>\n    </>\n  );\n};\n\nexport default SideBar;\n","import React, { useState } from \"react\";\nimport ProfileModal from \"./modal/ProfileModal\";\nimport ChangeGroupModal from \"./modal/ChangeGroupModal\";\n\nimport { animateScroll as scroll } from \"react-scroll\";\nimport { Responsive, Button, Icon } from \"semantic-ui-react\";\n\nconst TopBar = ({\n  modalChangeGroup,\n  setModalChangeGroup,\n  openChangeGroupModal,\n  openHamburger,\n  visible,\n}) => {\n  const scrollToTop = () => {\n    scroll.scrollToTop();\n  };\n\n  const [modalProfile, setModalProfile] = useState(false);\n\n  const openProfileModal = () => setModalProfile(true);\n  const closeProfileModal = () => setModalProfile(false);\n  const closeChangeGroupModal = () => setModalChangeGroup(false);\n\n  return (\n    <>\n      <Responsive {...Responsive.onlyTablet}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            borderBottom: \"1px solid gray\",\n          }}\n        >\n          <div\n            onClick={scrollToTop}\n            style={{\n              fontSize: \"30px\",\n              fontFamily: \"Pacifico,cursive\",\n              height: 50,\n              marginTop: 20,\n              marginLeft: 10,\n            }}\n          >\n            rin<span style={{ color: \"red\" }}>G</span>\n          </div>\n          <div style={{ marginRight: 10 }}>\n            <div style={{ margin: 10 }}>\n              <Button\n                circular\n                color=\"blue\"\n                size=\"mini\"\n                onClick={openProfileModal}\n                inverted\n              >\n                <Icon name=\"user circle\" /> プロフィール\n              </Button>\n              <ProfileModal\n                modal={modalProfile}\n                closeModal={closeProfileModal}\n              />\n              <div style={{ marginTop: 5 }}>\n                <Button\n                  circular\n                  size=\"mini\"\n                  color=\"orange\"\n                  onClick={openChangeGroupModal}\n                  inverted\n                >\n                  <Icon name=\"sync alternate\" />\n                  グループ設定\n                </Button>\n                <ChangeGroupModal\n                  modal={modalChangeGroup}\n                  closeModal={closeChangeGroupModal}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </Responsive>\n      <Responsive {...Responsive.onlyMobile}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            borderBottom: \"1px solid gray\",\n          }}\n        >\n          <div\n            onClick={scrollToTop}\n            style={{\n              fontSize: \"30px\",\n              fontFamily: \"Pacifico,cursive\",\n              height: 50,\n              marginTop: 20,\n              marginLeft: 10,\n            }}\n          >\n            rin<span style={{ color: \"red\" }}>G</span>\n          </div>\n          <div style={{ margin: 10 }}>\n            <button\n              style={{ background: \"none\", border: \"none\" }}\n              onClick={openHamburger}\n            >\n              <div>\n                {visible ? (\n                  <Icon name=\"cancel\" style={{ fontSize: 30, marginTop: 10 }} />\n                ) : (\n                  <Icon\n                    name=\"content\"\n                    style={{ fontSize: 30, marginTop: 10 }}\n                  />\n                )}\n              </div>\n            </button>\n          </div>\n        </div>\n      </Responsive>\n    </>\n  );\n};\n\nexport default TopBar;\n","import React from \"react\";\nimport { Button, Modal, Icon } from \"semantic-ui-react\";\nimport TodoApp from \"../todo_components/TodoApp\";\n\nconst TodoModal = ({ modal, closeModal }) => {\n  return (\n    <>\n      <Modal size=\"small\" open={modal} onClose={closeModal}>\n        <Modal.Header>TODO</Modal.Header>\n        <Modal.Content style={{ height: 500, overflowY: \"scroll\" }}>\n          <TodoApp />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button basic color=\"red\" onClick={closeModal}>\n            戻る\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    </>\n  );\n};\n\nexport default TodoModal;\n","import React, { useState, useContext } from \"react\";\nimport TodoApp from \"./todo_components/TodoApp\";\nimport ChatApp from \"./chat_components/ChatApp\";\nimport SideBar from \"./SideBar\";\nimport { AuthContext } from \"./AuthService\";\nimport firebase from \"./config/firebase\";\nimport Spinner from \"./Spinner\";\nimport TopBar from \"./TopBar\";\nimport ChangeGroupModal from \"./modal/ChangeGroupModal\";\nimport ProfileModal from \"./modal/ProfileModal\";\nimport TodoModal from \"./modal/TodoModal\";\n\nimport {\n  Grid,\n  Button,\n  Popup,\n  Responsive,\n  Sidebar,\n  Segment,\n  Menu,\n  Icon,\n} from \"semantic-ui-react\";\n\nconst TopPage = () => {\n  const {\n    groups,\n    setGroups,\n    user,\n    users,\n    currentGroup,\n    loading,\n    setLoading,\n  } = useContext(AuthContext);\n\n  const [modalChangeGroup, setModalChangeGroup] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [modalProfile, setModalProfile] = useState(false);\n  const [modalTodo, setModalTodo] = useState(false);\n  const openProfileModal = () => setModalProfile(true);\n  const closeProfileModal = () => setModalProfile(false);\n  const openTodoModal = () => setModalTodo(true);\n  const closeTodoModal = () => setModalTodo(false);\n\n  const openChangeGroupModal = () => setModalChangeGroup(true);\n  const openHamburger = () => setVisible(!visible);\n  const closeChangeGroupModal = () => setModalChangeGroup(false);\n\n  const pullName = () => {\n    if (currentGroup && groups) {\n      const conf = groups.find((group) => group.id === currentGroup);\n      return conf.groupName;\n    }\n  };\n\n  if (user || users) {\n    setLoading(false);\n  }\n\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          {/* pc */}\n          <Responsive {...Responsive.onlyComputer}>\n            <div style={{ padding: \"1em\", marginTop: 30 }}>\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column width={4}>\n                    <div style={{ position: \"fixed\", width: \"25%\" }}>\n                      <SideBar\n                        modalChangeGroup={modalChangeGroup}\n                        setModalChangeGroup={setModalChangeGroup}\n                        openChangeGroupModal={openChangeGroupModal}\n                        modalProfile={modalProfile}\n                        setModalProfile={setModalProfile}\n                      />\n                    </div>\n                  </Grid.Column>\n                  <Grid.Column width={8}>\n                    <div>{pullName()}</div>\n                    <ChatApp />\n                  </Grid.Column>\n                  <Grid.Column width={3} className=\"fixed_item\">\n                    <div style={{ position: \"fixed\" }}>\n                      <TodoApp />\n                      <Popup\n                        trigger={\n                          <Button\n                            size=\"huge\"\n                            icon=\"sign-out\"\n                            circular\n                            color=\"red\"\n                            inverted\n                            className=\"fixed_btn\"\n                            onClick={() => {\n                              firebase\n                                .auth()\n                                .signOut()\n                                .then(() => {\n                                  setLoading(false);\n                                  setGroups(null);\n                                })\n                                .catch((err) => {\n                                  console.log(err, \"signOutErr\");\n                                });\n                            }}\n                          />\n                        }\n                        content=\"ログアウト\"\n                        basic\n                      />\n                    </div>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </div>\n          </Responsive>\n\n          {/* tab */}\n          <Responsive {...Responsive.onlyTablet}>\n            <div>\n              <div\n                style={{\n                  zIndex: 10,\n                  backgroundColor: \"white\",\n                  position: \"fixed\",\n                  top: 0,\n                  width: \"100%\",\n                }}\n              >\n                <TopBar\n                  modalChangeGroup={modalChangeGroup}\n                  setModalChangeGroup={setModalChangeGroup}\n                  openChangeGroupModal={openChangeGroupModal}\n                />\n              </div>\n              <div style={{ padding: \"1em\", marginTop: 30 }}>\n                <Grid>\n                  <Grid.Row>\n                    <Grid.Column width={9}>\n                      <div style={{ marginTop: 80 }}>{pullName()}</div>\n                      <ChatApp />\n                    </Grid.Column>\n                    <Grid.Column width={3} className=\"fixed_item\">\n                      <div style={{ position: \"fixed\" }}>\n                        <TodoApp />\n                        <Popup\n                          trigger={\n                            <Button\n                              size=\"huge\"\n                              icon=\"sign-out\"\n                              circular\n                              color=\"red\"\n                              inverted\n                              className=\"fixed_btn\"\n                              onClick={() => {\n                                firebase\n                                  .auth()\n                                  .signOut()\n                                  .then(() => {\n                                    setLoading(false);\n                                    setGroups(null);\n                                  })\n                                  .catch((err) => {\n                                    console.log(err, \"signOutErr\");\n                                  });\n                              }}\n                            />\n                          }\n                          content=\"ログアウト\"\n                          basic\n                        />\n                      </div>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </div>\n            </div>\n          </Responsive>\n\n          {/* sp */}\n          <Responsive {...Responsive.onlyMobile}>\n            <div>\n              <div\n                style={{\n                  zIndex: 10,\n                  backgroundColor: \"white\",\n                  position: \"fixed\",\n                  top: 0,\n                  width: \"100%\",\n                }}\n              >\n                <TopBar\n                  modalChangeGroup={modalChangeGroup}\n                  setModalChangeGroup={setModalChangeGroup}\n                  openChangeGroupModal={openChangeGroupModal}\n                  visible={visible}\n                  openHamburger={openHamburger}\n                />\n              </div>\n              {/* humbargerMenu */}\n              <Grid.Column>\n                <Sidebar.Pushable as={Segment} style={{ position: \"fixed\" }}>\n                  <Sidebar\n                    as={Menu}\n                    animation=\"overlay\"\n                    icon=\"labeled\"\n                    inverted\n                    vertical\n                    visible={visible}\n                    width=\"thin\"\n                    direction=\"right\"\n                    style={{ top: 70 }}\n                  >\n                    <Menu.Item as=\"a\" onClick={openTodoModal}>\n                      <Icon name=\"list\" />\n                      TODO\n                    </Menu.Item>\n                    <TodoModal modal={modalTodo} closeModal={closeTodoModal} />\n                    <Menu.Item as=\"a\" onClick={openProfileModal}>\n                      <Icon name=\"user circle\" />\n                      profile\n                    </Menu.Item>\n                    <ProfileModal\n                      modal={modalProfile}\n                      closeModal={closeProfileModal}\n                    />\n                    <Menu.Item as=\"a\" onClick={openChangeGroupModal}>\n                      <Icon name=\"sync alternate\" />\n                      group\n                    </Menu.Item>\n                    <ChangeGroupModal\n                      modal={modalChangeGroup}\n                      closeModal={closeChangeGroupModal}\n                    />\n                    <Menu.Item\n                      as=\"a\"\n                      onClick={() => {\n                        firebase\n                          .auth()\n                          .signOut()\n                          .then(() => {\n                            setLoading(false);\n                            setGroups(null);\n                          })\n                          .catch((err) => {\n                            console.log(err, \"signOutErr\");\n                          });\n                      }}\n                    >\n                      <Icon name=\"sign-out\" />\n                      logout\n                    </Menu.Item>\n                  </Sidebar>\n\n                  <Sidebar.Pusher>\n                    <div style={{ padding: \"5px\" }}>\n                      <Grid>\n                        <Grid.Column style={{ width: \"100%\", marginTop: 80 }}>\n                          <div>{pullName()}</div>\n                          <ChatApp />\n                        </Grid.Column>\n                      </Grid>\n                    </div>\n                  </Sidebar.Pusher>\n                </Sidebar.Pushable>\n              </Grid.Column>\n            </div>\n          </Responsive>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default TopPage;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./AuthService\";\n\nconst LoggedInRoute = ({ component: Component, ...rest }) => {\n  const { user, users, setLoading } = useContext(AuthContext);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user ? <Component {...props} /> : <Redirect to={\"/signin\"} />\n      }\n    />\n  );\n};\n\nexport default LoggedInRoute;\n","import React, { useContext } from \"react\";\nimport SignIn from \"./pages/SignIn\";\nimport SignUp from \"./pages/SignUp\";\nimport TopPage from \"./TopPage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AuthProvider } from \"./AuthService\";\nimport LoggedInRoute from \"./LoggedInRoute\";\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <Router>\n        <Switch>\n          <LoggedInRoute exact path=\"/\" component={TopPage} />\n          <Route exact path=\"/signin\" component={SignIn} />\n          <Route exact path=\"/signup\" component={SignUp} />\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./style.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}